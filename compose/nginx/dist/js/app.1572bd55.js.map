{"version":3,"file":"js/app.1572bd55.js","mappings":"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","sources":["webpack://vue-project/./src/App.vue","webpack://vue-project/./src/App.vue?7ccd","webpack://vue-project/./src/components/NavBar.vue","webpack://vue-project/./src/components/NavBar.vue?01fd","webpack://vue-project/./src/components/UserInformation.vue","webpack://vue-project/./src/components/UserInformation.vue?f3cf","webpack://vue-project/./src/views/PostTaskView.vue","webpack://vue-project/./src/views/PostTaskView.vue?7dae","webpack://vue-project/./src/views/TaskMarketView.vue","webpack://vue-project/./src/views/TaskMarketView.vue?f996","webpack://vue-project/./src/views/MyPersonInfoView.vue","webpack://vue-project/./src/views/MyPersonInfoView.vue?0738","webpack://vue-project/./src/views/UserLoginView.vue","webpack://vue-project/./src/views/UserLoginView.vue?3cd5","webpack://vue-project/./src/views/HomeView.vue","webpack://vue-project/./src/views/HomeView.vue?1da1","webpack://vue-project/./src/components/TaskDetail.vue","webpack://vue-project/./src/components/TaskDetail.vue?521c","webpack://vue-project/./src/components/ImageFramerResult.vue","webpack://vue-project/./src/components/ImageFramerResult.vue?764e","webpack://vue-project/./src/views/MyPostedTaskView.vue","webpack://vue-project/./src/views/MyPostedTaskView.vue?896a","webpack://vue-project/./src/views/MyWorkView.vue","webpack://vue-project/./src/views/MyWorkView.vue?1977","webpack://vue-project/./src/components/ImageFramer.vue","webpack://vue-project/./src/components/ImageFramer.vue?09c2","webpack://vue-project/./src/components/TaskAnnotation.vue","webpack://vue-project/./src/components/TaskAnnotation.vue?5d2d","webpack://vue-project/./src/views/TaskDetailView.vue","webpack://vue-project/./src/views/TaskDetailView.vue?9f8f","webpack://vue-project/./src/views/AdminTaskView.vue","webpack://vue-project/./src/views/AdminTaskView.vue?34b6","webpack://vue-project/./src/views/AdminReportView.vue","webpack://vue-project/./src/views/AdminReportView.vue?303d","webpack://vue-project/./src/router/index.js","webpack://vue-project/./src/store/index.js","webpack://vue-project/./src/main.js","webpack://vue-project/webpack/bootstrap","webpack://vue-project/webpack/runtime/chunk loaded","webpack://vue-project/webpack/runtime/compat get default export","webpack://vue-project/webpack/runtime/define property getters","webpack://vue-project/webpack/runtime/global","webpack://vue-project/webpack/runtime/hasOwnProperty shorthand","webpack://vue-project/webpack/runtime/make namespace object","webpack://vue-project/webpack/runtime/publicPath","webpack://vue-project/webpack/runtime/jsonp chunk loading","webpack://vue-project/webpack/startup"],"sourcesContent":["<template>\n  <router-view></router-view>\n</template>\n\n<style>\n\n</style>\n\n<script setup>\n\n</script>","import { render } from \"./App.vue?vue&type=template&id=5b79cc66\"\nconst script = {}\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <el-aside width=\"200px\">\n    <div class=\"el-aside__logo\"></div>\n    <el-menu\n        router\n        :default-active=\"activeIndex\"\n        active-text-color=\"#ffd04b\"\n        background-color=\"#000000\"\n        text-color=\"#fff\"\n        @select=\"handleSelect\"\n    >\n      <!-- 首页 -->\n      <el-menu-item index=\"/home\">\n        <template #title>\n          <span>首页</span>\n        </template>\n      </el-menu-item>\n      <!-- 发布任务界面 -->\n      <el-menu-item index=\"/post-task\">\n        <template #title>\n          <span>发布任务</span>\n        </template>\n      </el-menu-item>\n      <!-- 任务广场 -->\n      <el-menu-item index=\"/task-market\">\n        <template #title>\n          <span>任务广场</span>\n        </template>\n      </el-menu-item>\n      <!-- 个人主页 -->\n      <el-sub-menu index=\"4\">\n        <template #title>\n          <span>个人主页</span>\n        </template>\n        <el-menu-item index=\"/personal-info\">\n          <template #title>\n            <span>个人信息</span>\n          </template>\n        </el-menu-item>\n        <el-menu-item index=\"/posted-tasks\">\n          <template #title>\n            <span>已发布任务</span>\n          </template>\n        </el-menu-item>\n        <el-menu-item index=\"/tasks-to-complete\">\n          <template #title>\n            <span>已领取任务</span>\n          </template>\n        </el-menu-item>\n      </el-sub-menu>\n      <!-- 管理界页 -->\n      <el-sub-menu index=\"5\">\n        <template #title>\n          <span>管理页面</span>\n        </template>\n        <el-menu-item index=\"/admin-task\">\n          <template #title>\n            <span>数据审核</span>\n          </template>\n        </el-menu-item>\n        <el-menu-item index=\"/admin-report\">\n          <template #title>\n            <span>举报处理</span>\n          </template>\n        </el-menu-item>\n      </el-sub-menu>\n    </el-menu>\n  </el-aside>\n</template>\n\n<script setup>\nimport { ref,onMounted } from 'vue'\nimport { useRoute} from 'vue-router'\nimport {\n  ElAside,\n  ElMenu,\n  ElMenuItem,\n  ElSubMenu,\n} from 'element-plus'\nimport router from \"@/router\";\n\nconst activeIndex = ref('/') // 默认选中首页\nconst route = useRoute()\nconst loginFlag = ref(false)\nconst adminFlag =ref(false)\n\nonMounted(async () => {\n  // 在组件挂载后检查登录状态\n  loginFlag.value = sessionStorage.getItem(\"logined\") === 'true';\n  activeIndex.value = route.path;\n  adminFlag.value = sessionStorage.getItem(\"adminAuth\") === 'true';\n});\n\nconst handleSelect = (index) => {\n   //检查登录状态的逻辑（如果需要）\n   if (!loginFlag.value && index !== '/home') {\n     alert('请先登录！');\n     router.push('/login');\n     return;\n   }\n   if (!adminFlag.value && index.startsWith('/admin')) {\n     alert('您不具备管理员权限！！！');\n     router.push(route.path);\n     return;\n   }\n  // 更新 activeIndex 的值\n  activeIndex.value = index;\n  router.push(index);\n};\n\n\n</script>\n\n<style lang=\"scss\" scoped>\n.el-aside {\n  background-color: #000000;\n  height: 100vh;\n  overflow: auto;\n\n  &__logo {\n    height: 120px;\n    background: url('@/assets/logo.png') no-repeat center / 120px auto;\n  }\n\n  .el-menu {\n    border-right: none;\n  }\n}\n</style>","import script from \"./NavBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NavBar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NavBar.vue?vue&type=style&index=0&id=237f0550&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-237f0550\"]])\n\nexport default __exports__","<template>\n  <!-- 不同页面显示不同用户信息，提醒用户 -->\n  <el-descriptions size=\"large\" border column=4 v-if=\"props.currentPage === 'task-market'\">\n    <el-descriptions-item label=\"用户名称\" width=\"12.5%\">{{user.username}}</el-descriptions-item>\n    <el-descriptions-item label=\"信誉等级\" width=\"12.5%\">{{ user.userCreditRank }}</el-descriptions-item>\n    <el-descriptions-item label=\"信誉经验\" width=\"12.5%\">{{ user.userCurrentExp}}</el-descriptions-item>\n    <el-descriptions-item label=\"可领取任务星级\" width=\"12.5%\">{{ user.userCreditRank}}</el-descriptions-item>\n    <el-descriptions-item label=\"注意:\" >\n      <span style=\"color: red\">1. 请注意标注质量！发布者反馈任务质量将影响您的信誉经验！</span><br>\n      <span style=\"color: red\">2. 请注意任务的截止日期，逾期后未完成将影响您的信誉经验！（不包含发布者提前终止任务情况）</span>\n    </el-descriptions-item>\n  </el-descriptions>\n\n  <el-descriptions size=\"large\" border column=2 v-if=\"props.currentPage === 'post-task'\">\n    <el-descriptions-item label=\"用户名称\" width=\"12.5%\">{{ user.username }}</el-descriptions-item>\n    <el-descriptions-item label=\"当前余额\" width=\"12.5%\">{{ user.userBalance }}</el-descriptions-item>\n  </el-descriptions>\n\n  <el-descriptions size=\"large\" border column=\"4\" v-if=\"props.currentPage === 'task-detail'\">\n    <el-descriptions-item label=\"用户名称\" width=\"12.5%\">{{ user.username }}</el-descriptions-item>\n    <el-descriptions-item label=\"信誉等级\" width=\"12.5%\">{{ user.userCreditRank }}</el-descriptions-item>\n    <el-descriptions-item label=\"可领取任务星级\" width=\"12.5%\">{{ user.userCreditRank }}</el-descriptions-item>\n    <el-descriptions-item label=\"注意:\" >\n      <span style=\"color: red\">标注时，请注意标注质量！</span>\n    </el-descriptions-item>\n  </el-descriptions>\n\n\n</template>\n\n\n<script setup>\nimport axios from \"axios\";\nimport { ref, onMounted} from \"vue\";\n// 导入defineProps函数\nimport { defineProps } from 'vue';\nimport {ElMessage} from \"element-plus\";\nconst props = defineProps({\n  currentPage:String,\n})\n\nconst user = ref({\n  user_id:1,\n  username: '',\n  email: '',\n  userBalance: 0,\n  userCreditRank: 1,\n  userCurrentExp: 0\n});\nasync function fetchUserInfo() {\n  try {\n    // TODO url 修改请求 合并后端\n    // const response = await axios.get('http://127.0.0.1:8000/get_user/',{params:{params:JSON.stringify({username:sessionStorage.getItem(\"username\"),user_id:1})}});\n    const response = await axios.get('http://82.156.202.232:8000/get_user/',{params:{username:sessionStorage.getItem(\"username\")}});\n    if (response.data[\"status\"] === \"ok\" ) {\n      user.value = response.data[\"data\"];\n      console.log()\n      user.value.userBalance = Number(user.value.userBalance.toFixed(2))\n      sessionStorage.setItem(\"currentUserBalance\",user.value.userBalance.toFixed(2));\n    } else if (response.data[\"status\"] === \"error\" ) {\n      ElMessage.error('请求用户数据失败');\n    }\n  } catch (error) {\n    ElMessage.error('请求用户数据失败');\n    console.error('获取用户实例失败', error);\n  }\n}\n\nonMounted(()=>{\n  fetchUserInfo();\n  sessionStorage.setItem(\"user\",JSON.stringify(user.value));\n})\n</script>\n\n\n<style scoped lang=\"scss\">\n\n</style>","import script from \"./UserInformation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserInformation.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <el-container class=\"layout-container\">\n    <!-- 左侧菜单 -->\n    <NavBar/>\n    <el-container>\n      <el-header style=\"font-size: large; display: flex; justify-content: center; align-items: center;\">\n        任务发布界面\n      </el-header>\n      <!-- 个人信息 -->\n      <el-card header=\"个人信息\" shadow=\"never\" class=\"info-card\">\n        <UserInformation current-page=\"post-task\"/>\n      </el-card>\n      <!-- 发布任务 -->\n      <el-card header=\"发布任务设置\" shadow=\"never\" class=\"task-card\">\n        <el-form :model=\"form\" class=\"form-item\">\n          <el-row :gutter=\"40\">\n            <el-col :span=\"12\">\n              <el-form-item label=\"任务名称\" class=\"form-item-label\">\n                <el-input v-model=\"form.task_name\" placeholder=\"输入任务名称\" />\n              </el-form-item>\n              <el-form-item label=\"数据类型\" class=\"form-item-label\">\n                <el-select v-model=\"form.data_type\" style=\"max-width: 100%\">\n                  <el-option label=\"文本类型\" value=\"文本\" />\n                  <el-option label=\"图像类型\" value=\"图片\" />\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"任务描述\" class=\"form-item-label\">\n                <el-input v-model=\"form.task_description\" type=\"textarea\"/>\n              </el-form-item>\n              <el-form-item label=\"问题题干\" class=\"form-item-label\">\n                <el-input v-model=\"form.question_description\" type=\"textarea\"/>\n              </el-form-item>\n              <el-form-item label=\"问题类型\" class=\"form-item-label\">\n                <el-select v-model=\"form.question_type\">\n                  <el-option label=\"单选题\" value=\"单选题\" />\n                  <el-option label=\"多选题\" value=\"多选题\" />\n                  <el-option label=\"填空题\" value=\"填空题\" />\n                  <el-option v-if=\"form.data_type === '图片'\" label=\"框图题\" value=\"框图题\" />\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"截止时间\" class=\"form-item-label\">\n                <el-date-picker v-model=\"form.deadline_time\" type=\"date\" placeholder=\"Pick a date\" style=\"width: 100%\" :disabledDate=\"disabledDate\" />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <div style=\"display: inline-block; width: 100%;\">\n                <el-form-item label=\"任务星级\" class=\"form-item-label\">\n                  <el-rate v-model=\"form.task_rank\" :texts=\"[1, 2, 3, 4, 5]\" show-text />\n                </el-form-item>\n              </div>\n              <div style=\"display: inline-block; width: 100%;\">\n                <el-form-item label=\"标注报酬\" class=\"form-item-label\">\n                  <el-input-number v-model=\"form.each_pay\" :precision=\"2\" :step=\"0.05\" :min=\"0\" size=\"small\" />\n                  <span>&nbsp;&nbsp;元/条数据</span>\n                </el-form-item>\n              </div>\n              <el-card v-if=\"form.question_type === '单选题'|| form.question_type === '多选题'\" shadow=\"never\">\n                <!-- 添加选项的表单项 -->\n                <el-form-item label=\"选项\" class=\"form-item-label\">\n                  <!-- 使用 Flex 布局 -->\n                  <div style=\"display: flex; align-items: center;\">\n                    <!-- 选项内容输入框 -->\n                    <el-input v-model=\"optionText\" placeholder=\"请输入选项内容\" style=\"flex: 1;\" />\n                    <!-- 添加选项按钮 -->\n                    <el-button @click=\"addOption\" type=\"primary\">添加选项</el-button>\n                  </div>\n                </el-form-item>\n                <div v-if=\"form.options.length\">\n                  <ul>\n                    <li v-for=\"(option, index) in form.options\" :key=\"index\">\n                      {{ option }}\n                      <!-- 删除选项按钮 -->\n                      <el-button type=\"text\" @click=\"removeOption(index)\">删除</el-button>\n                    </li>\n                  </ul>\n                </div>\n              </el-card>\n              <el-form-item label=\"上传文件\" v-if=\"form.data_type === '文本'\" class=\"file-upload-item\">\n                <el-button type=\"primary\" @click=\"chooseFile('text')\">选择CSV文件</el-button>\n                <input type=\"file\" id=\"fileInputText\" @change=\"handleFileChange\" accept=\".csv\" style=\"display: none;\"/>\n                <div v-if=\"fileName\" class=\"file-name\">&nbsp;已选择文件: {{ fileName }}</div>\n                <div v-else class=\"file-prompt\">&nbsp;请选择一个CSV文件</div>\n                <el-link v-if=\"fileName\" class=\"file-prompt\" type=\"danger\" @click=\"removeFile('fileInputText')\">&nbsp;删除</el-link>\n              </el-form-item>\n              <el-form-item label=\"上传文件\" v-else-if=\"form.data_type === '图片'\" class=\"file-upload-item\">\n                <el-button type=\"primary\" @click=\"chooseFile('image')\">选择ZIP文件</el-button>\n                <input type=\"file\" id=\"fileInputImage\" @change=\"handleFileChange\" accept=\".zip\" style=\"display: none;\"/>\n                <div v-if=\"fileName\" class=\"file-name\">&nbsp;已选择文件: {{ fileName }}</div>\n                <div v-else class=\"file-prompt\">&nbsp;请选择一个仅包含图片的ZIP文件</div>\n                <el-link v-if=\"fileName\" class=\"file-prompt\" type=\"danger\" @click=\"removeFile('fileInputImage')\">&nbsp;删除</el-link>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"onSubmit\">创建任务</el-button>\n            <el-button @click=\"clickHome\">取消创建</el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n    </el-container>\n  </el-container>\n</template>\n\n\n\n\n<script setup>\nimport NavBar from \"@/components/NavBar.vue\";\nimport UserInformation from \"@/components/UserInformation.vue\";\nimport {ref,onMounted} from \"vue\";\nimport router from \"@/router\";\nimport axios from \"axios\";\nimport {ElMessageBox} from \"element-plus\";\n\n// Define your data model\nconst form=ref({\n  task_name: '',\n  task_description: '',\n  data_type: '文本',\n  task_rank: 1,\n  each_pay: 0.05,\n  question_description:'',\n  question_type: '填空题',\n  options: [],\n  publisher: '',\n  deadline_time: null, // For date picker\n})\nconst fileName = ref('');\nonMounted(()=>{\n})\n\n// Option text state for adding new options\nconst optionText = ref('');\n// Methods to handle form interactions\nconst addOption = () => {\n  if (optionText.value.trim()) {\n    form.value.options.push(optionText.value);\n    optionText.value = ''; // Reset input after adding\n  }\n};\nconst removeOption = (index) => {\n  form.value.options.splice(index, 1);\n};\n\n// Placeholder onSubmit function, replace with actual logic\nconst onSubmit = async () => {\n  // 表单验证逻辑（示例）\n  if (!form.value.task_name) {\n    alert('请填写任务名称。');\n    return;\n  } else if (!form.value.task_description) {\n    alert('请填写任务描述。');\n    return;\n  } else if (!form.value.question_description) {\n    alert('请填写问题题干。');\n    return;\n  } else if (!form.value.deadline_time) {\n    alert('请选择截止日期');\n    return;\n  }\n\n  if (form.value.data_type === '文本' && !fileName.value) {\n    alert('请上传CSV文件。');\n    return;\n  }\n\n  if (form.value.data_type === '图片' && !fileName.value) {\n    alert('请上传ZIP文件。');\n    return;\n  }\n\n  try {\n    // 构建FormData对象\n    let formData = new FormData();\n    formData.append('task_name', form.value.task_name);\n    formData.append('data_type', form.value.data_type);\n    formData.append('task_rank', form.value.task_rank);\n    formData.append('each_pay', form.value.each_pay);\n    formData.append('task_description', form.value.task_description);\n    formData.append('question_description', form.value.question_description);\n    formData.append('question_type', form.value.question_type);\n    formData.append('options',JSON.stringify(form.value.options))\n    formData.append('deadline_time', form.value.deadline_time.toISOString());\n    formData.append('publisher', sessionStorage.getItem(\"username\"));\n    // 如果有文件上传，添加文件到FormData\n    if (form.value.data_type === '文本' && document.getElementById('fileInputText').files[0]) {\n      formData.append('file', document.getElementById('fileInputText').files[0], fileName.value);\n    } else if (form.value.data_type === '图片' && document.getElementById('fileInputImage').files[0]) {\n      formData.append('file', document.getElementById('fileInputImage').files[0], fileName.value);\n    }\n    const response = await axios.post('http://82.156.202.232:8000/post_task/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data', // 重要：设置正确的Content-Type\n      },\n    });\n\n    // 处理响应\n    const responseData = response.data;\n    if (responseData.status === 'ok') {\n      // 使用ElMessageBox.confirm来弹出成功确认对话框\n      ElMessageBox.confirm(responseData.message, '成功', {\n        confirmButtonText: '确定',\n        type: 'success',\n      }).then(() => {\n        // 用户点击“确定”后的操作，例如导航到首页\n        router.push('/posted-tasks');\n      }).catch(() => {\n        // 用户点击取消或关闭对话框\n        router.push('/posted-tasks');\n      });\n    } else {\n      // 使用ElMessageBox.alert来弹出错误消息框\n      ElMessageBox.alert(responseData.message, '操作失败', {\n        confirmButtonText: '确定',\n        type: 'error',\n      }).catch(() => {});\n    }\n  } catch (error) {\n    // 错误处理\n    ElMessageBox.alert('任务创建失败，请稍后重试。', '错误', {\n      confirmButtonText: '确定',\n      type: 'error',\n    }).catch(() => {});\n    console.error('任务创建失败：000000', error);\n  }\n};\n\n// Navigate back to home\nconst clickHome = () => {\n  // Implement navigation logic here, e.g., router.push('/')\n  router.push('/home')\n  console.log('Navigating back home');\n};\n\n\nconst chooseFile = (type) => {\n  // 根据类型选择文件输入\n  const fileInputId = type === 'text' ? 'fileInputText' : 'fileInputImage';\n  document.getElementById(fileInputId).click();\n};\nconst handleFileChange = (e) => {\n  if (e.target.files === null || e.target.files.length === 0) {\n    return;\n  }\n\n  const file = e.target.files[0];\n  const validExtensions = form.value.data_type === '文本' ? ['.csv'] : ['.zip'];\n  const fileExtension = '.'+file.name.split('.').pop();\n\n  if (validExtensions.includes(fileExtension)) {\n    fileName.value = file.name;\n  } else {\n    alert(`请上传${form.value.data_type === '文本' ? 'CSV' : 'ZIP'}文件.`);\n    fileName.value = '';\n  }\n};\n// 处理删除文件的方法\nconst removeFile = (fileInputId) => {\n  // 清空对应的文件输入字段\n  const fileInput = document.getElementById(fileInputId);\n  fileInput.value = '';\n  // 重置fileName和fileSize\n  fileName.value = '';\n};\n\n// 计算属性或方法，用于禁用当前日期和之前的日期\nconst disabledDate = (date) => {\n  const today = new Date();\n  // 设置时间为0时，即当天的开始时间（00:00:00），确保整天都是禁用的\n  today.setHours(0, 0, 0, 0);\n  return date && date <= today;\n};\n</script>\n\n<style scoped>\n\n.layout-container {\n  background-image: url('@/assets/bkground.jpg');\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  height: 100vh;\n}\n.el-card {\n  background-color: rgba(255, 255, 255, 0.3);\n  border: none;\n  width: 65%;\n  box-shadow: none !important;\n}\n\n</style>\n\n\n","import script from \"./PostTaskView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PostTaskView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PostTaskView.vue?vue&type=style&index=0&id=d5a2fcd8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d5a2fcd8\"]])\n\nexport default __exports__","<template>\n  <!--  element plus的容器-->\n  <el-container class=\"layout-container\">\n    <!-- 左侧菜单 -->\n    <NavBar/>\n    <!-- 右侧主区域 -->\n    <el-container>\n      <el-header style=\"font-size: large; display: flex; justify-content: center; align-items: center;\">\n        任务广场\n      </el-header>\n      <el-card header=\"个人信息\" shadow=\"never\">\n      <UserInformation current-page=\"task-market\"/>\n      </el-card>\n\n      <el-card shadow=\"never\">\n        <template #header>\n          <span>任务列表</span>&nbsp;&nbsp;\n          <el-icon><Files /></el-icon>\n        </template>\n        <el-table\n            size=\"large\"\n            :data=\"tasks\"\n            default-sort=\"{ prop: 'deadline_time', order: 'descending' }\"\n            stripe\n            height=\"400px\"\n            style=\"width: 100%; max-height: 400px; overflow-y: auto;\"\n        >\n          <el-table-column prop=\"task_id\"  label=\"任务ID\" />\n          <el-table-column prop=\"publisher\" label=\"发布者\"/>\n          <el-table-column prop=\"task_name\" label=\"任务名称\"/>\n          <el-table-column prop=\"data_type\" sortable label=\"数据类型\"/>\n          <el-table-column prop=\"question_type\" sortable label=\"问题类型\"/>\n          <el-table-column prop=\"deadline_time\" sortable label=\"截止日期\"/>\n          <el-table-column prop=\"each_pay\" label=\"报酬\"/>\n          <el-table-column prop=\"task_status\" sortable label=\"当前状态\"/>\n          <el-table-column label=\"Operations\">\n            <template #default=\"scope\">\n              <el-button\n                  size=\"large\"\n                  @click=\"viewTaskDetail(scope.row)\"\n                  :disabled=\"checkTaskDeadline(scope.row)\"\n                  v-if=\"checkApprovalStatus(scope.row.task_status)\"\n              >\n                {{ checkTaskDeadline(scope.row) ? '任务已截止' : '查看详情' }}\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-card>\n    </el-container>\n  </el-container>\n</template>\n\n<script setup>\nimport NavBar from '@/components/NavBar.vue';\nimport UserInformation from \"@/components/UserInformation.vue\";\nimport axios from 'axios';\nimport {ref, onMounted} from 'vue';\nimport {Files} from \"@element-plus/icons-vue\";\nimport router from \"@/router\";\nimport dayjs from 'dayjs';\nconst tasks = ref([]);\n\n\nasync function fetchTasks() {\n  try {\n    // TODO url 修改后端请求地址 和后端修改 请求任务数据的函数\n    const response = await axios.get('http://82.156.202.232:8000/get_tasks/');\n    // 检查响应状态\n    if (response.data.status === \"ok\") {\n      // 将响应数据中的 task 数据赋值给 tasks 变量\n      tasks.value = response.data.data;\n      // 处理逾期任务\n      await handleOverdueTasks();\n    } else {\n      // 处理后端返回的错误状态\n      console.error('获取任务失败:', response.data.message);\n      // 这里可以添加额外的错误处理逻辑，比如显示错误消息给用户\n    }\n  } catch (error) {\n    console.error('请求任务数据失败：', error);\n  }\n}\n// 处理逾期任务的函数\nasync function handleOverdueTasks() {\n  const now = dayjs(); // 获取当前时间\n  tasks.value.forEach(task => {\n    const taskDeadline = dayjs(task.deadline_time);\n    task.options = JSON.parse(task.options)\n    if (now.isAfter(taskDeadline, 'day') && task.task_status === \"进行中\") {\n      // 如果任务已逾期且在进行中，则发起终止请求\n      terminateTask(task);\n      task.task_status=\"已逾期\"\n    }\n  });\n}\n\n// 发起终止任务的请求\nasync function terminateTask(task) {\n  try {\n    const postData = {\n      \"task_id\": task.task_id,\n      \"type\": \"已逾期\"\n    };\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    }\n    const response = await axios.post('http://82.156.202.232:8000/terminate_task/', postData,header);\n    if (response.data.status === 'ok') {\n      console.log(`任务${task.task_id}逾期处理成功`);\n      // 这里可以更新前端的任务状态显示\n      // 例如，将任务状态更新为\"已逾期\"\n    } else {\n      console.error(`任务${task.task_id}逾期处理失败: ${response.data.message}`);\n    }\n  } catch (error) {\n    console.error(`请求失败: ${error}`);\n  }\n}\n\n\n\n\nfunction viewTaskDetail(task) {\n  router.push({ name: 'task-detail', params: { task_id: task.task_id} });\n  sessionStorage.setItem(\"currentTaskId\",task.task_id);\n  sessionStorage.setItem(\"currentTask\",JSON.stringify(task));\n  sessionStorage.setItem(\"currentTaskDataType\",task.data_type)\n}\n\nconst checkTaskDeadline = (task) => {\n  const taskDeadline = dayjs(task.deadline_time);\n  if (task.task_status === \"提前终止\") {\n    return true;\n  }\n  return dayjs().isAfter(taskDeadline, 'day');\n};\n\nconst checkApprovalStatus = (status) => {\n  return !(status === \"审核中\" || status === \"审核未通过\");\n}\n// 组件挂载后请求数据\nonMounted(() => {\n  fetchTasks();\n});\n</script>\n\n<style scoped lang=\"scss\">\n.layout-container {\n  display: flex;\n  height: 100vh;\n}\n\n</style>","import script from \"./TaskMarketView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaskMarketView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TaskMarketView.vue?vue&type=style&index=0&id=1fd652b1&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1fd652b1\"]])\n\nexport default __exports__","<template>\n  <el-container class=\"layout-container\">\n    <NavBar />\n    <el-container>\n      <el-header style=\"font-size: large; display: flex; justify-content: center; align-items: center;\">\n        个人信息\n      </el-header>\n\n      <!-- 用户信息和充值信息 -->\n      <div class=\"container-wrap\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\">\n          <el-card shadow=\"never\">\n            <div class=\"form-container\">\n              <el-form :model=\"user\" @submit.prevent=\"submitForm\" label-width=\"100px\">\n                <el-form-item label=\"用户名\">\n                  <el-input v-model=\"user.username\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱\">\n                  <el-input v-model=\"user.email\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"余额\">\n                  <el-input v-model=\"user.userBalance\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"信用等级\">\n                  <el-input v-model=\"user.userCreditRank\" disabled></el-input>\n                </el-form-item>\n                <el-form-item>\n                  <el-button type=\"primary\" @click=\"submitForm\" disabled>保存更改</el-button>\n                </el-form-item>\n              </el-form>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card shadow=\"never\">\n            <el-form label-width=\"100px\">\n              <el-form-item label=\"充值金额\">\n                <el-input v-model=\"rechargeAmount\" placeholder=\"请输入充值金额\"></el-input>\n              </el-form-item>\n              <el-form-item>\n                <el-button type=\"primary\" @click=\"handleRecharge\">充值</el-button>\n              </el-form-item>\n            </el-form>\n          </el-card>\n        </el-col>\n      </el-row>\n\n      <!-- 消息表格 -->\n      <el-row>\n        <el-col :span=\"24\">\n          <el-card shadow=\"never\">\n            <el-table :data=\"messages\" style=\"width: 100%\" height=\"350\">\n              <el-table-column prop=\"id\" label=\"ID\" width=\"100\"></el-table-column>\n              <el-table-column prop=\"time\" label=\"时间\" sortable></el-table-column>\n              <el-table-column prop=\"sender\" label=\"发送者\"></el-table-column>\n              <el-table-column prop=\"task_id\" label=\"任务id\"></el-table-column>\n              <el-table-column prop=\"subtask_id\" label=\"子任务id\"></el-table-column>\n              <el-table-column prop=\"content\" label=\"内容\"></el-table-column>\n            </el-table>\n          </el-card>\n        </el-col>\n      </el-row>\n      </div>\n    </el-container>\n  </el-container>\n</template>\n\n<script setup>\nimport NavBar from '@/components/NavBar.vue';\nimport axios from 'axios';\nimport { ref,onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\n\n// 用户数据的响应式引用\nconst user = ref({\n  user_id: 0,\n  username: '',\n  email: '',\n  userBalance: 0,\n  userCreditRank: 0,\n  userCurrentExp: 0,\n});\nconst upEXP=ref(0)\nlet dictionary = {\n  \"1\": 100,\n  \"2\": 500,\n  \"3\": 1000,\n  \"4\": 2000,\n  \"5\": 9999999\n};\n// 消息数据的响应式引用\nconst messages = ref([]);\n// 组件挂载后请求用户数据\nonMounted(() => {\n  fetchUserData();\n  fetchMessages(); // 获取消息数据\n});\n\n// 获取用户数据的函数\nasync function fetchUserData() {\n  try {\n    const response = await axios.get('http://82.156.202.232:8000/get_user/',{params:{username:sessionStorage.getItem(\"username\")}});\n    if (response.data[\"status\"] === \"ok\" ) {\n      user.value = response.data[\"data\"];\n      user.value.userBalance = Number(user.value.userBalance.toFixed(2))\n      upEXP.value = dictionary[user.value.userCreditRank]\n    } else if (response.data[\"status\"] === \"error\" ) {\n      ElMessage.error('请求用户数据失败');\n    }\n  } catch (error) {\n    console.error('请求用户数据失败：', error);\n    ElMessage.error('请求用户数据失败');\n  }\n}\n// 获取消息数据的函数\nasync function fetchMessages() {\n  try {\n    const params = { username: sessionStorage.getItem(\"username\") };\n    const response = await axios.get('http://82.156.202.232:8000/get_messages/', { params });\n    if (response.data.status === \"ok\") {\n      messages.value = response.data.data;\n      console.log(messages.value)\n    } else {\n      ElMessage.info('没有消息');\n    }\n  } catch (error) {\n    console.error('获取消息失败：', error);\n    ElMessage.error('获取消息失败');\n  }\n}\n\nconst rechargeAmount = ref('');\nconst handleRecharge = async () => {\n  // 检查充值金额是否有效\n  if (!rechargeAmount.value.trim()) {\n    ElMessage.error('请输入充值金额');\n    return;\n  }\n  const amount = parseFloat(rechargeAmount.value);\n  if (isNaN(amount) || amount <= 0) {\n    ElMessage.error('充值金额必须是正数');\n    return;\n  }\n\n  try {\n    const response = await axios.get('http://82.156.202.232:8000/top_up/', {params:{username: user.value.username,balance_change: amount}});\n    // 处理响应\n    if (response.data.status === \"ok\") {\n      console.log('充值成功', response.data);\n      ElMessage.success('充值成功');\n      user.value.userBalance += amount;\n      rechargeAmount.value='';\n    } else if (response.data.status === \"error\")  {\n      ElMessage.error('充值失败');\n    }\n  } catch (error) {\n    console.log(error)\n    ElMessage.error('error');\n  }\n};\n\n// 提交表单的函数\nfunction submitForm() {\n  // 在这里添加更新用户数据的逻辑\n  // 通常需要调用 API 更新服务器上的数据\n  console.log('提交表单的逻辑');\n  // 假设更新成功\n  ElMessage.success('个人信息更新成功');\n}\n\n\n</script>\n\n<style scoped lang=\"scss\">\n.layout-container {\n  display: flex;\n  align-items: flex-start;\n  height: 100vh;\n  background-image: url('@/assets/bkground.jpg');\n  background-size: cover;\n  background-position: center;\n}\n\n.container-wrap {\n  height: 90vh;\n  overflow: hidden;\n  padding: 0 20px;\n}\n\n.el-card {\n  background-color: rgba(255, 255, 255, 0.5);\n  margin: 20px 0;\n  align-self: flex-start;\n}\n\n</style>","import script from \"./MyPersonInfoView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MyPersonInfoView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MyPersonInfoView.vue?vue&type=style&index=0&id=ff3f967c&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ff3f967c\"]])\n\nexport default __exports__","<template>\n  <el-row class=\"login-page\">\n    <el-col :span=\"12\" class=\"bg\"></el-col>\n    <el-col :span=\"6\" :offset=\"3\" class=\"form\">\n      <!-- 注册表单 -->\n      <el-form ref=\"form\" size=\"large\" autocomplete=\"off\" v-if=\"isRegister\" :model=\"registerData\" :rules=\"rules\">\n        <el-form-item>\n          <h2>注册</h2>\n        </el-form-item>\n        <el-form-item prop=\"username\">\n          <el-input :prefix-icon=\"User\" placeholder=\"请输入用户名\" v-model=\"registerData.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input v-model=\"registerData.password\" type=\"password\" placeholder=\"请输入密码\" :prefix-icon=\"Lock\" show-password />\n        </el-form-item>\n        <el-form-item prop=\"rePassword\">\n          <el-input v-model=\"registerData.rePassword\" type=\"password\" placeholder=\"请再次输入密码\" :prefix-icon=\"Lock\" show-password />\n        </el-form-item>\n        <el-form-item prop=\"email\">\n          <el-input :prefix-icon=\"Message\" placeholder=\"请输入邮箱\" v-model=\"registerData.email\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"verifyCode\">\n          <el-col :span=\"14\">\n          <el-input :prefix-icon=\"Lock\" placeholder=\"请输入验证码\" v-model=\"registerData.verifyCode\"></el-input>\n          </el-col>\n          <el-col :span=\"10\">\n            <el-button class=\"get-verify\" @click=\"getVerifyCode\">获取验证码</el-button>\n          </el-col>\n        </el-form-item>\n        <!-- 注册按钮 -->\n        <el-form-item>\n          <el-button class=\"button\" type=\"primary\" auto-insert-space @click=\"clickRegister\">\n            注册\n          </el-button>\n        </el-form-item>\n        <el-form-item class=\"flex\">\n          <el-link type=\"info\" :underline=\"false\" @click=\"isRegister = false\">\n            ← 返回\n          </el-link>\n        </el-form-item>\n      </el-form>\n      <!-- 忘记密码表单 -->\n      <el-form ref=\"forgetPasswordForm\" size=\"large\" autocomplete=\"off\" v-if=\"isRestPwd\">\n        <el-form-item>\n          <h1>重置密码</h1>\n        </el-form-item>\n        <el-form-item>\n          <el-input :prefix-icon=\"User\" placeholder=\"请输入用户名\" v-model=\"forgetUsername\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"email\">\n          <el-input :prefix-icon=\"Message\" placeholder=\"请输入您的邮箱\" v-model=\"forgetEmail\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"verifyCode\">\n          <el-col :span=\"16\">\n            <el-input :prefix-icon=\"Lock\" placeholder=\"请输入验证码\" v-model=\"forgetVerifyCode\"></el-input>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-button @click=\"sendVerifyCode\">获取验证码</el-button>\n          </el-col>\n        </el-form-item>\n        <el-form-item>\n          <el-input placeholder=\"请输入新密码\" v-model=\"newPassword\" type=\"password\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"resetPassword\">重置密码</el-button>\n        </el-form-item>\n        <el-form-item class=\"flex\">\n          <el-link type=\"info\" :underline=\"false\" @click=\"isRestPwd = false\">\n            ← 返回\n          </el-link>\n        </el-form-item>\n      </el-form>\n\n\n      <!-- 登录表单 -->\n      <el-form ref=\"form\" :model=\"loginData\" size=\"large\" autocomplete=\"off\" v-if=\"!isRestPwd && !isRegister\">\n        <el-form-item>\n          <h2>登录</h2>\n        </el-form-item>\n        <el-form-item>\n          <el-input :prefix-icon=\"User\" placeholder=\"请输入用户名\" v-model=\"loginData.username\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-input v-model=\"loginData.password\" type=\"password\" placeholder=\"请输入密码\" :prefix-icon=\"Lock\" show-password />\n        </el-form-item>\n        <el-form-item class=\"flex\">\n          <div class=\"flex\">\n            <el-link type=\"primary\" :underline=\"false\" @click=\"isRestPwd = true\">忘记密码？</el-link>\n          </div>\n        </el-form-item>\n        <!-- 登录按钮 -->\n        <el-form-item>\n          <el-button class=\"button\" type=\"primary\" auto-insert-space @click=\"clickLogin\">登录</el-button>\n        </el-form-item>\n        <el-form-item class=\"flex\">\n          <el-link type=\"info\" :underline=\"false\" @click=\"isRegister = true\">\n            注册 →\n          </el-link>\n        </el-form-item>\n      </el-form>\n    </el-col>\n  </el-row>\n</template>\n\n<script setup>\nimport { User, Lock, Message } from '@element-plus/icons-vue'\nimport { ref } from 'vue'\nimport axios from \"axios\";\nimport {ElMessage} from \"element-plus\";\nimport {useRouter} from \"vue-router\";\n//控制注册与登录表单的显示， 默认显示注册\nconst isRegister = ref(false);\nconst isRestPwd = ref(false);\nconst correctCode = ref(\"\");\nconst emailRight = ref(false);\nconst emailing = ref(false);\nconst codeEmail = ref(\"\");\nconst emailingSeconds = ref(0);\nconst usernameRight = ref(false);\nconst passwordRight = ref(false);\nconst passwordAgainRight = ref(false);\nconst verifyCodeRight = ref(false);\nconst { push } = useRouter();\n// 定义数据模型\n//登录\nconst loginData = ref({\n  username: \"\",\n  password: \"\",\n})\n\n\nconst clickLogin = () => {\n  axios\n      .get(\"http://82.156.202.232:8000/log_in/\", {\n        params: {\n          username: loginData.value.username,\n          password: loginData.value.password,\n        },\n      })\n      .then((res) => {\n        console.log(res.data)\n        if (res.data[\"status\"] === \"error\") {\n          if (res.data[\"message\"] === \"noUser\") {\n            ElMessage({\n              type: \"error\",\n              message: \"用户不存在或用户名错误\",\n            });\n          } else if (res.data[\"message\"] === \"wrongPassword\") {\n            ElMessage({\n              type: \"error\",\n              message: \"密码错误\",\n            });\n          } else {\n            ElMessage({\n              type: \"error\",\n              message: \"登录失败，请稍后再试\",\n            });\n          }\n        } else if (res.data[\"status\"] === \"ok\") {\n          ElMessage({\n            type: \"success\",\n            message: \"登录成功\",\n          });\n          if (res.data[\"type\"] === \"admin\") {\n            sessionStorage.setItem(\"adminAuth\", \"true\");\n          } else if (res.data[\"type\"] === \"normal\")  {\n            sessionStorage.setItem(\"adminAuth\", \"false\");\n          }\n          sessionStorage.setItem(\"logined\", \"true\");\n          sessionStorage.setItem(\"username\", loginData.value.username);\n          push({\n            name: \"home\"\n          });\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n};\n\n//注册\nconst registerData = ref({\n  username: '',\n  password: '',\n  rePassword: '',\n  email: '',\n  verifyCode: ''\n})\n\nconst validateUsername = (rule, value, callback) => {\n  if (value === \"\") {\n    usernameRight.value = false;\n    callback(new Error(\"用户名不能为空\"));\n  } else if (value.match(/[a-zA-z\\d]{5,12}/g)) {\n    usernameRight.value = true;\n    callback();\n  } else {\n    usernameRight.value = false;\n    callback(new Error(\"请输入5-12位字母和数字的组合\"));\n  }\n};\n\n\n// 校验密码的函数\nconst validatePassword = (rule, value, callback) => {\n  if (value === \"\") {\n    passwordRight.value = false;\n    callback(new Error(\"密码不能为空\"));\n  } else if (value.search(/^[a-zA-Z\\d]{6,18}$/g) === -1) {\n    passwordRight.value  = false;\n    callback(new Error(\"请输入6-18位字母和数字的组合\"));\n  } else {\n    passwordRight.value  = true;\n    callback();\n  }\n};\nconst checkRePassword = (rule, value, callback) => {\n  if (value === '') {\n    passwordAgainRight.value = false\n    callback(new Error('请再次确认密码'))\n  } else if (value !== registerData.value.password) {\n    passwordAgainRight.value = false\n    callback(new Error(\"请确保两次输入密码一致\"))\n  } else {\n    passwordAgainRight.value = true\n    callback()\n  }\n}\n\n// 校验邮箱格式的函数\nconst validateEmail = (rule, value, callback) => {\n  if (value.match(/[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+/g)) {\n    emailRight.value = true;\n    callback();\n  } else {\n    emailRight.value = false;    \n    callback(new Error(\"邮箱格式不合法\"));\n  }\n};\n\n// 校验验证码的函数\nconst validateVerifyCode = (rule, value, callback) => {\n  if (!Number.isInteger(Number(value)) || value.length !== 6) {\n    verifyCodeRight.value = false;\n    callback(new Error(\"请输入六位数字验证码\"));\n  } else {\n    verifyCodeRight.value = true;\n    callback();\n  }\n};\n\n// 定义表单校验规则\nconst rules={\n  username:[\n    {validator: validateUsername,required:true, message:'请输入用户名', trigger:'blur'},\n    {min: 5, max: 16, message: '长度5-16位非空字符', trigger: 'blur'}\n  ],\n  password:[\n    {validator: validatePassword,required:true, message:'请输入密码', trigger:'blur'},\n    {min: 5, max: 16, message: '长度5-16位非空字符', trigger: 'blur'}\n  ],\n  rePassword:[\n    { validator: checkRePassword, trigger: 'blur' }\n  ],\n  email: [\n    { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n    { validator: validateEmail, trigger: 'blur' }\n  ],\n  verifyCode: [\n    { required: true, message: '请输入验证码', trigger: 'blur' },\n    { validator: validateVerifyCode, trigger: 'blur' }\n  ]\n};\n\nconst getVerifyCode = (emailRight) => {\n  if (emailRight.value) {\n    ElMessage({\n      type: \"error\",\n      message: \"邮箱格式错误，请进行修改\",\n    });\n    return;\n  }\n  if (emailing.value) {\n    ElMessage({\n      type: \"warning\",\n      message: `验证码已发送，${60 - emailingSeconds.value}s后可以重新发送`,\n    });\n    return;\n  }\n  codeEmail.value = registerData.value.email;\n  emailing.value = true;\n  emailingSeconds.value = 0;\n  let timerI = setInterval(() => {\n    emailingSeconds.value += 1;\n  }, 1000);\n  let timerT = setTimeout(() => {\n    emailing.value = false;\n    clearTimeout(timerT);\n    clearInterval(timerI);\n  }, 60000);\n  axios\n      // TODO url 请求地址修改\n      .get(\"http://82.156.202.232:8000/log_up/\", {\n        params: {\n          type: \"getVerifyCode\",\n          email: codeEmail.value,\n        },\n      })\n      .then((res) => {\n        console.log(res)\n        if (res.data[\"status\"] === \"ok\") {\n          correctCode.value = res.data[\"verifyCode\"];\n          ElMessage({\n            type: \"success\",\n            message: \"验证码发送成功，请在对应邮箱查收\",\n          });\n        } else if (res.data[\"status\"] === \"wrong\") {\n          if (res.data[\"message\"] === \"sameEmail\") {\n            ElMessage({\n              type: \"error\",\n              message: \"该邮箱已被注册\",\n            });\n            emailing.value = false;\n            emailingSeconds.value = 0;\n            clearTimeout(timerT);\n            clearInterval(timerI);\n          }\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n}\n\nconst clickRegister= () => {\n  if (\n      !(\n          usernameRight.value &&\n          passwordRight &&\n          passwordAgainRight.value &&\n          emailRight.value &&\n          verifyCodeRight.value\n      )\n  ) {\n    ElMessage({\n      type: \"error\",\n      message: \"填写信息格式错误，请进行修改\",\n    });\n    return;\n  }\n  if (registerData.value.email !== codeEmail.value) {\n    ElMessage({\n      type: \"warning\",\n      message: \"填写邮箱与发送验证码时对应邮箱不匹配\",\n    });\n    return;\n  }\n  if (registerData.value.verifyCode !== correctCode.value) {\n    ElMessage({\n      type: \"error\",\n      message: \"验证码错误\",\n    });\n    return;\n  }\n  axios\n      // // TODO url 请求地址修改\n      .get(\"http://82.156.202.232:8000/log_up/\", {\n        params: {\n          type: \"logUp\",\n          username: registerData.value.username,\n          password: registerData.value.password,\n          email: registerData.value.email,\n          verifyCode: registerData.value.verifyCode,\n        },\n      })\n      .then((res) => {\n        console.log(registerData)\n        if (res.data[\"status\"] === \"ok\") {\n          ElMessage({\n            type: \"success\",\n            message: \"注册成功，请返回登录界面\",\n          });\n        } else {\n          console.log(res);\n          if (res.data[\"message\"] === \"sameName\") {\n            ElMessage({\n              type: \"error\",\n              message: \"该用户名已注册，请选择其他用户名\",\n            });\n          } else if (res.data[\"message\"] === \"unknown\") {\n            ElMessage({\n              type: \"error\",\n              message: \"注册失败，未知错误\",\n            });\n          }\n        }\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n}\n\n\n// 前端脚本\nconst forgetUsername = ref('');\nconst forgetEmail = ref('');\nconst forgetVerifyCode = ref(\"\");\nconst forgetVerifyCode2 = ref(\"\");\nconst newPassword = ref('');\nconst sendVerifyCode = () => {\n  if (!forgetUsername.value){\n    ElMessage.error('用户名不能为空');\n    return;\n  }\n  // 验证邮箱格式\n  if (!forgetEmail.value.match(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/)) {\n    ElMessage.error('邮箱格式不正确');\n    return;\n  }\n\n  // 发送验证码请求\n  axios.get('http://82.156.202.232:8000/send-verify-code/', {\n    params: {\n      username:forgetUsername.value,\n      email: forgetEmail.value,\n    },\n  }).then((res) => {\n    if (res.data.status === \"ok\") {\n      ElMessage.success('验证码已发送至您的邮箱');\n      forgetVerifyCode2.value = res.data[\"verifyCode\"];\n    } else if (res.data.status === \"error\"){\n      ElMessage.error(res.data.message);\n    }\n  }).catch(error => {\n    console.error('发送验证码失败:', error);\n    ElMessage.error('发送验证码失败，请稍后重试',error);\n  });\n};\n\nconst resetPassword = () => {\n  // 验证验证码和新密码\n  if (!forgetVerifyCode.value || !newPassword.value) {\n    ElMessage.error('请填写验证码和新密码');\n    return;\n  }\n  if (forgetVerifyCode.value !== forgetVerifyCode2.value) {\n    ElMessage.error('验证码错误，请仔细阅读邮件最新验证码');\n    return;\n  }\n  const data ={\n    username:forgetUsername.value,\n    email: forgetEmail.value,\n    newPassword: newPassword.value,\n  }\n  const header = {\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    }\n  }\n  // TODO url 提交新密码\n  axios.post('http://82.156.202.232:8000/reset_password/', data ,header).then((res) => {\n    if (res.data.status === \"ok\") {\n      ElMessage.success('密码重置成功');\n      isRestPwd.value=false\n      forgetVerifyCode.value = \"\";\n      forgetVerifyCode2.value = \"\";\n      newPassword.value = '';\n    }\n  }).catch(error => {\n    console.error('密码重置失败:', error);\n    ElMessage.error('密码重置失败，请稍后重试');\n  });\n};\n\n</script>\n\n\n<style lang=\"scss\" scoped>\n\n  .login-page {\n    height: 100vh;\n    width: 100vw;\n    background: url('@/assets/login_bg.jpg') no-repeat center / cover;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    .form {\n      background-color: rgba(50, 50, 60, 0.7); /* 较深的灰蓝色背景 */\n      color: #FFFFFF;\n      padding: 20px;\n      border-radius: 10px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n    }\n\n    input, .button {\n      background: transparent;\n      color: #FFFFFF;\n      border-bottom: 1px solid #CCCCCC;\n    }\n\n    .button {\n      background-color: #0056b3;\n      border: none;\n      padding: 10px;\n      border-radius: 5px;\n    }\n\n    .button:hover {\n      background-color: #003D79;\n    }\n  }\n\n</style>","import script from \"./UserLoginView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserLoginView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserLoginView.vue?vue&type=style&index=0&id=6005a950&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6005a950\"]])\n\nexport default __exports__","<template>\n  <el-container class=\"layout-container\">\n    <NavBar />\n    <el-container class=\"main-container\">\n      <el-header v-if=\"loginFlag\" class=\"header\">\n        <strong>欢迎来到Joker数据标注平台</strong>\n        <el-dropdown @command=\"handleCommand\" placement=\"bottom-end\" class=\"dropdown\">\n          <span class=\"el-dropdown__box\">\n            <el-avatar :src=\"avatar\" />\n            <el-icon><CaretBottom /></el-icon>\n          </span>\n          <template #dropdown>\n            <el-dropdown-menu>\n              <el-dropdown-item command=\"logout\" :icon=\"SwitchButton\">退出登录</el-dropdown-item>\n            </el-dropdown-menu>\n          </template>\n        </el-dropdown>\n      </el-header>\n      <el-header v-else class=\"header\">\n        <div>\n          <strong>欢迎来到Joker数据标注平台！</strong>\n          <el-button type=\"primary\" @click=\"goToLogin\" style=\"margin-left: 20px;\">登录</el-button>\n        </div>\n      </el-header>\n      <el-row>\n        <el-col :span=\"24\">\n          <!--数据标注任务-->\n          <el-main class=\"main-style\">\n            <div class=\"basic-types-area\">\n              <el-radio-group v-model=\"selectedItem\" @change=\"handleClickItem\" class=\"radio-area\">\n                <el-radio-button label=\"0\">单选题标注</el-radio-button>\n                <el-radio-button label=\"1\">多选题标注</el-radio-button>\n                <el-radio-button label=\"2\">填空题标注</el-radio-button>\n              </el-radio-group>\n              <div class=\"basic-types-content\">\n                <el-carousel class=\"carousel-box\" ref=\"carousel\" @change=\"carouselChange\" :initial-index=\"0\">\n                  <el-carousel-item v-for=\"(item, index) in carouselItems\" :key=\"index\">\n                    <el-row>\n                      <el-col :span=\"12\">\n                        <el-image class=\"image\" :src=\"item.image\" fit=\"cover\" />\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <div class=\"custom-box1\">\n                          <div class=\"carousel-item-title\">{{ item.title }}</div>\n                          <div class=\"tag-area\">\n                            <el-tag v-for=\"tag in item.tags\" :key=\"tag\" style=\"margin-right: 10px\">{{ tag }}</el-tag>\n                          </div>\n                          <div class=\"carousel-item-content\">{{ item.description }}</div>\n                        </div>\n                      </el-col>\n                    </el-row>\n                  </el-carousel-item>\n                </el-carousel>\n              </div>\n            </div>\n          </el-main>\n        </el-col>\n        <!--数据标注平台-->\n        <el-col :span=\"15\">\n          <el-main class=\"platform-introduction\">\n            <el-card class=\"info-card\" shadow=\"hover\">\n              <div class=\"card-header\">\n                <h2 class=\"section-title\">我们的数据标注平台</h2>\n              </div>\n              <el-row gutter=\"20\">\n                <el-col :span=\"12\">\n                  <div class=\"content-container\">\n                    <h3>全球部署的标注工具</h3>\n                    <p>支持多种格式，支持与客户系统对接。</p>\n                    <ul>\n                      <li>提供全面的标注工具</li>\n                      <li>灵活的项目管理流程</li>\n                      <li>层级式的组与人员管理方式</li>\n                    </ul>\n                    <el-button type=\"primary\">了解更多</el-button>\n                  </div>\n                </el-col>\n                <el-col :span=\"12\">\n                  <el-image class=\"platform-image\" :src=\"require('@/assets/home_img1.png')\" />\n                </el-col>\n              </el-row>\n            </el-card>\n          </el-main>\n        </el-col>\n      </el-row>\n    </el-container>\n  </el-container>\n</template>\n\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { SwitchButton, CaretBottom } from '@element-plus/icons-vue';\nimport avatar from '@/assets/default.png';\nimport NavBar from '@/components/NavBar.vue';\n\n// 数据定义\nconst carouselItems = ref([\n  { id: 1, title: '单选题标注', image: require('@/assets/single_choice.jpg'), description: '用户根据图片内容选择一个正确的答案。', tags: ['图片', '单选题'] },\n  { id: 2, title: '多选题标注', image: require('@/assets/multiple_choice.jpg'), description: '用户可以选择多个答案作为图片内容的描述。', tags: ['图片', '多选题'] },\n  { id: 3, title: '填空题标注', image: require('@/assets/fill_in_blanks.jpg'), description: '用户需要根据图片内容填写适当的文字。', tags: ['图片', '填空题'] }\n]);\n\nconst username = ref('');\nconst router = useRouter();\nconst loginFlag = ref(false);\nconst selectedItem = ref(0);\nconst carousel = ref(null);\n\nonMounted(() => {\n  username.value = sessionStorage.getItem('username') || '未登录用户';\n  loginFlag.value = sessionStorage.getItem('logined') === 'true';\n});\n\nconst handleCommand = (command) => {\n  if (command === 'logout') {\n    sessionStorage.removeItem('logined');\n    sessionStorage.removeItem('username');\n    router.push('/login');\n  }\n};\n\nconst goToLogin = () => {\n  router.push('/login');\n};\n\nconst handleClickItem = (label) => {\n  selectedItem.value = Number(label);\n  carousel.value.setActiveItem(selectedItem.value);\n};\n\nconst carouselChange = (cur) => {\n  selectedItem.value = cur;\n};\n</script>\n\n<style scoped>\n.main-container {\n  display: flex;\n  height: 100vh;\n}\n\n.section-title {\n  font-size: 20px;\n}\n\n\n.radio-area {\n  margin-bottom: 20px;\n}\n\n.el-carousel__button {\n  border: none;\n}\n\n.platform-introduction .info-card {\n  background-color: rgba(255, 255, 255, 0.7);\n  border: none;\n}\n\n.platform-image {\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  background-image: url('@/assets/home_img1.png');\n}\n\n.section-title {\n  font-size: 20px;\n  text-align: left;\n  margin-bottom: 20px;\n}\n\n.data-intro-card h2 {\n  margin-bottom: 12px;\n}\n\n\n\n.layout-container {\n  height: 100vh;\n  background-image: url('@/assets/bkground.jpg');\n  background-size: cover;\n  background-position: center;\n}\n\n.header {\n  font-size: large;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dropdown {\n  margin-left: auto;\n}\n\n.el-radio-button {\n  margin: 0 10px;\n}\n\n.basic-types-content {\n  width: 60%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.carousel-box {\n  width: 100%;\n}\n\n.custom-box1 {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 20px;\n  border: none;\n}\n\n.carousel-item-title {\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #333;\n}\n\n.tag-area {\n  margin-bottom: 20px;\n}\n\n.carousel-item-content {\n  font-size: 16px;\n  color: #666;\n}\n\n.header strong {\n  font-size: 20px;\n}\n\nul {\n  list-style: none;\n  padding-left: 0;\n}\n\nul li {\n  position: relative;\n  padding-left: 20px;\n}\n\nul li::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  height: 6px;\n  width: 6px;\n  background-color: blue;\n  border-radius: 50%;\n}\n\n</style>\n","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HomeView.vue?vue&type=style&index=0&id=6e682566&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6e682566\"]])\n\nexport default __exports__","<template>\n  <!-- 确保 currentPage 匹配时才渲染组件 -->\n  <el-card header=\"任务详情\" shadow=\"never\" v-if=\"props.currentPage === 'task-market-detail'\">\n    <el-descriptions size=\"large\" border column=\"4\">\n      <!-- 使用 task 实例的数据填充 el-descriptions-item -->\n      <el-descriptions-item label=\"任务名称\">{{ task?.task_name }}</el-descriptions-item>\n      <el-descriptions-item label=\"任务星级\">{{ task?.task_rank }}</el-descriptions-item>\n      <el-descriptions-item label=\"任务数量\">{{ task?.data_nums }}</el-descriptions-item>\n      <el-descriptions-item label=\"截止日期\">{{ task?.deadline_time }}</el-descriptions-item>\n      <el-descriptions-item label=\"数据类型\">{{ task?.data_type }}</el-descriptions-item>\n      <el-descriptions-item label=\"问题类型\">{{ task?.question_type }}</el-descriptions-item>\n      <el-descriptions-item label=\"报酬\">{{ task?.each_pay }}</el-descriptions-item>\n      <el-descriptions-item label=\"当前状态\">{{ task?.task_status }}</el-descriptions-item>\n      <el-descriptions-item label=\"任务描述\">{{ task?.task_description }}</el-descriptions-item>\n    </el-descriptions>\n  </el-card>\n\n  <el-card header=\"任务详情\" shadow=\"never\" v-if=\"props.currentPage === 'posted-task'\">\n    <el-descriptions size=\"large\" border column=\"3\">\n      <!-- 使用 task 实例的数据填充 el-descriptions-item -->\n      <el-descriptions-item label=\"任务名称\">{{ task?.task_name }}</el-descriptions-item>\n      <el-descriptions-item label=\"任务数量\">{{ task?.data_nums }}</el-descriptions-item>\n      <el-descriptions-item label=\"截止日期\">{{ task?.deadline_time }}</el-descriptions-item>\n      <el-descriptions-item label=\"数据类型\">{{ task?.data_type }}</el-descriptions-item>\n      <el-descriptions-item label=\"问题类型\">{{ task?.question_type }}</el-descriptions-item>\n      <el-descriptions-item label=\"当前状态\">{{ task?.task_status }}</el-descriptions-item>\n    </el-descriptions>\n  </el-card>\n</template>\n\n<script setup>\nimport {defineProps, onMounted, ref} from 'vue';\nimport axios from 'axios';\nimport {ElMessage} from \"element-plus\";\n\n// 定义组件的 props\nconst props = defineProps({\n  currentPage: String,\n});\n\n// 创建响应式变量来存储 task 数据\nconst task = ref(null);\n\nonMounted(()=>{\n  const taskid = Number(sessionStorage.getItem('currentTaskId'))\n  fetchTask(taskid)\n})\n// TODO 假设 fetchTask 函数用于获取任务详情\n// 这个函数会在组件加载时被调用\nasync function fetchTask(taskID) {\n  try {\n    const response = await axios.get('http://82.156.202.232:8000/get_tasks/', { params: {task_id:taskID}});\n    if (response.data[\"status\"] === \"ok\") {\n      task.value = response.data[\"data\"][0];\n    } else if (response.data[\"status\"] === \"error\") {\n      if (response.data[\"message\"]){\n        ElMessage.error(response.data[\"message\"])\n      } else{\n        ElMessage.error('查询任务失败')\n      }\n    }\n\n  } catch (error) {\n    console.error('请求任务数据失败：', error);\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n</style>","import script from \"./TaskDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaskDetail.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"parent-container\">\n    <el-card shadow=\"never\" style=\"width: 60%\">\n      <div id=\"image-label-area\"></div>\n    </el-card>\n  </div>\n</template>\n<script setup>\n\nimport {ref, defineProps,watch, onMounted} from 'vue';\nimport SimpleImageLabel from 'simple-image-label';\nconst simpleImageLabel = ref(null);\nconst props = defineProps({\n  subtask:Object\n});\nonMounted(() => {\n  if (!props.subtask.content) {\n    console.error('Image URL is required');\n    return;\n  }\n\n  simpleImageLabel.value = new SimpleImageLabel({\n    el: 'image-label-area',\n    imageUrl: props.subtask.content,\n    labels: JSON.parse(props.subtask.answer),\n    readOnly:true,\n  });\n});\nwatch(() => props.subtask, () => {\n  // 当 subtask 发生变化时，执行以下操作\n  simpleImageLabel.value.setImage(props.subtask.content);\n  simpleImageLabel.value.setLabels(JSON.parse(props.subtask.answer));\n});\n</script>\n\n<style scoped>\n.parent-container {\n  display: flex;\n  justify-content: center; /* 水平居中 */\n  align-items: center; /* 垂直居中 */\n}\n</style>","import script from \"./ImageFramerResult.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageFramerResult.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ImageFramerResult.vue?vue&type=style&index=0&id=dfee1e9a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-dfee1e9a\"]])\n\nexport default __exports__","<template>\n  <!--  element plus的容器-->\n  <el-container class=\"layout-container\">\n    <!-- 左侧菜单 -->\n    <NavBar/>\n    <!-- 右侧主区域 -->\n    <el-container>\n      <el-header style=\"font-size: large; display: flex; justify-content: center; align-items: center;\">\n        已发布任务\n      </el-header>\n\n      <el-card shadow=\"never\">\n        <template #header>\n          <span>已发布任务列表</span>&nbsp;&nbsp;\n          <el-icon><Files /></el-icon>\n        </template>\n        <el-table\n            size=\"large\"\n            :data=\"tasks\"\n            stripe\n            height=\"400px\"\n            style=\"width: 100%; max-height: 400px; overflow-y: auto;\"\n        >\n          <el-table-column prop=\"task_id\"  label=\"任务ID\" />\n          <el-table-column prop=\"publisher\" label=\"发布者\"/>\n          <el-table-column prop=\"task_name\" label=\"任务名称\"/>\n          <el-table-column prop=\"data_type\" label=\"数据类型\"/>\n          <el-table-column prop=\"question_type\" label=\"问题类型\"/>\n          <el-table-column prop=\"deadline_time\" label=\"截止日期\"/>\n          <el-table-column prop=\"each_pay\" label=\"报酬\"/>\n          <el-table-column prop=\"task_status\" label=\"当前状态\"/>\n          <el-table-column label=\"Operations\">\n            <template #default=\"scope\">\n              <el-button size=\"large\" @click=\"showSubTasksDrawer(scope.row)\" v-if=\"checkApprovalStatus(scope.row.task_status)\">\n                点击查看详情\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-card>\n    </el-container>\n  </el-container>\n\n\n  <!-- 添加抽屉 -->\n  <el-drawer\n      title=\"子任务详情\"\n      v-model=\"subTasksDrawerVisible\"\n      size=\"70%\"\n      :show-close=\"false\"\n  >\n    <template #header=\"{ close, titleId, titleClass }\">\n      <h4 :id=\"titleId\" :class=\"titleClass\">子任务列表</h4>\n      <el-button type=\"danger\" @click=\"close\">\n        <el-icon class=\"el-icon--left\"><CircleCloseFilled /></el-icon>\n        Close\n      </el-button>\n    </template>\n    <div v-if=\"subTasksDrawerVisible\">\n      <!-- 子任务列表 -->\n      <TaskDetail current-page=\"posted-task\"/>\n      <el-card shadow=\"never\">\n      <el-table :data=\"subTasks\" height=\"500\">\n        <el-table-column prop=\"subtask_index\" label=\"子任务索引\" />\n        <el-table-column prop=\"content\" label=\"内容\">\n            <template #default=\"scope\" v-if=\"currentSubTaskType === '图片'\">\n              <el-image style=\"width: 100px; height: 100px\" :src=scope.row.content :fit=\"'contain'\" />\n            </template>\n        </el-table-column>\n        <el-table-column prop=\"subtask_status\" label=\"当前状态\" />\n        <el-table-column prop=\"answer\" label=\"标注结果\" v-if=\"currentQuestionType!=='框图题'\" />\n        <el-table-column label=\"标注结果\" v-if=\"currentQuestionType==='框图题'\">\n          <template #default=\"scope\">\n            <el-button size=\"large\" @click=\"viewImageAnswer(scope.row)\" :disabled=\"scope.row.subtask_status==='未完成' || scope.row.subtask_status==='未领取'\">\n              查看详情\n            </el-button>\n          </template>\n        </el-table-column>\n        <!-- 反馈任务按钮 -->\n        <el-table-column label=\"反馈任务\">\n          <template #default=\"scope\">\n            <!-- 根据 status 显示不同的按钮 -->\n            <div v-if=\"scope.row.subtask_status === '举报中'\">\n              <el-button size=\"large\" disabled type=\"warning\">举报中</el-button>\n            </div>\n            <div v-else-if=\"scope.row.subtask_status === '举报已解决'\">\n              <el-button size=\"large\" disabled type=\"success\">举报已解决</el-button>\n            </div>\n            <div v-else-if=\"scope.row.subtask_status === '已完成'\">\n              <el-button size=\"large\" @click=\"reportSubtask(scope.row)\" type=\"primary\">\n                举报\n              </el-button>\n            </div>\n            <div v-else>\n              <el-button size=\"large\" disabled type=\"danger\">任务未完成</el-button>\n            </div>\n          </template>\n        </el-table-column>\n        <!-- 根据需要添加更多列 -->\n      </el-table>\n\n      </el-card>\n      <div class=\"task-actions\">\n        <!-- 根据任务状态显示不同的按钮 -->\n        <el-button\n            size=\"large\"\n            :type=\"currentTask.task_status === '进行中' ? 'danger' : 'primary'\"\n            @click=\"currentTask.task_status === '进行中' ? confirmEndTask() : downloadData()\"\n        >\n          {{ currentTask.task_status === '进行中' ? '终止任务' : '下载数据' }}\n        </el-button>\n      </div>\n    </div>\n  </el-drawer>\n\n  <el-dialog :show-close=\"false\" v-model=\"dialogImageVisible\" title=\"标注结果\" width=\"800\" >\n    <image-framer-result :subtask=\"currenSubTask\"></image-framer-result>\n    <el-button type=\"primary\" @click=\"dialogImageVisible = false\">返 回</el-button>\n  </el-dialog>\n</template>\n\n<script setup>\nimport NavBar from '@/components/NavBar.vue';\nimport TaskDetail from \"@/components/TaskDetail.vue\";\nimport ImageFramerResult from \"@/components/ImageFramerResult.vue\";\n//import UserInformation from \"@/components/UserInformation.vue\";\nimport axios from 'axios';\nimport {ref, onMounted} from 'vue';\nimport {Files} from \"@element-plus/icons-vue\";\nimport { CircleCloseFilled } from '@element-plus/icons-vue'\nimport {ElMessage} from \"element-plus\";\nconst tasks = ref([]);\n\n// 请求任务数据的函数\nasync function fetchTasks() {\n  const params = {\n    publisher: sessionStorage.getItem(\"username\")\n  }\n  try {\n    const response = await axios.get('http://82.156.202.232:8000/get_tasks/',{params:params});\n    if (response.data.status===\"ok\") {\n      tasks.value = response.data[\"data\"];\n    } else if (response.data.status===\"error\") {\n      ElMessage.error(response.data[\"message\"])\n    }\n  } catch (error) {\n    ElMessage.error('请求任务数据失败')\n    console.error('请求任务数据失败：', error);\n  }\n}\n\n// 组件挂载后请求数据\nonMounted(() => {\n  fetchTasks();\n});\n\n\n// 控制抽屉的显示和隐藏\nconst currentSubTaskType = ref('')\nconst currentQuestionType = ref('')\nconst subTasksDrawerVisible = ref(false);\n// 子任务数据\nconst subTasks = ref([]);\nconst currentTask =ref(Object)\n// 获取子任务数据的函数\nasync function fetchSubTasks(task) {\n  try {\n    currentSubTaskType.value = task.data_type;\n    currentQuestionType.value = task.question_type;\n    // TODO url 修改请求地址\n    const response = await axios.get(`http://82.156.202.232:8000/get_subtasks/`, { params: { task_id: task.task_id } });\n    subTasks.value = response.data[\"data\"];\n  } catch (error) {\n    console.error('请求子任务数据失败：', error);\n  }\n}\n// 显示子任务抽屉的函数\nfunction showSubTasksDrawer(task) {\n  fetchSubTasks(task); // 获取子任务数据\n  currentTask.value=task;\n  subTasksDrawerVisible.value = true; // 显示抽屉\n  sessionStorage.setItem(\"currentTaskId\",task.task_id);\n}\n\nfunction reportSubtask(subTask) {\n  // 构建举报数据\n  const data = {\n    task_id: subTask.task,\n    subtask_index: subTask.subtask_index\n  };\n  console.log(subTask)\n  const header = {\n    headers : {\"Content-Type\": \"application/x-www-form-urlencoded\"}\n  };\n  // TODO url 发送举报请求\n  axios.post('http://82.156.202.232:8000/report_subtask/', data, header)\n      .then(response => {\n        // 根据后端返回的状态码处理不同的逻辑\n        if (response.data.status === 'ok') {\n          // 举报成功，显示成功消息\n          ElMessage.success(response.data.message);\n          subTask.subtask_status = \"举报中\";\n        } else {\n          // 举报失败，显示错误消息\n          ElMessage.error(response.data.message);\n        }\n      })\n      .catch(error => {\n        // 网络或其他错误，显示错误消息\n        ElMessage.error('因为网络原因，举报任务失败，请稍后重试。');\n        console.error('举报任务失败：', error);\n      });\n}\n\nfunction confirmEndTask() {\n  // 弹出确认框\n  const confirmEnd = window.confirm('确定要终止任务吗？');\n  if (confirmEnd) {\n    // 如果用户确认，调用 API 终止任务\n    endTask().then((response) => {\n      // 终止任务成功后的逻辑\n      if (response.data.status===\"ok\") {\n        ElMessage.success(response.data.message);\n        currentTask.value.task_status = \"提前终止\"\n      } else if (response.data.status===\"error\") {\n        ElMessage.error(response.data.message);\n      }\n    }).catch((error) => {\n      // 处理错误\n      console.error('终止任务失败：', error);\n    });\n  }\n}\n\nasync function endTask() {\n  console.log(currentTask)\n  const data = {\n    task_id: Number(sessionStorage.getItem('currentTaskId')),\n    type: \"提前终止\"\n  };\n  const header = {\n    headers : {\"Content-Type\": \"application/x-www-form-urlencoded\"}\n  };\n  // eslint-disable-next-line no-useless-catch\n  try {\n    // TODO url 修改请求地址\n    const response = await axios.post('http://82.156.202.232:8000/terminate_task/', data, header);\n    // 处理响应\n    return response;\n  } catch (error) {\n    // 这里可以抛出错误，让调用者处理\n    throw error;\n  }\n}\nconst dialogImageVisible = ref(false)\nconst currenSubTask = ref(null)\nfunction viewImageAnswer(subtask) {\n  dialogImageVisible.value = true;\n  if (subtask.answer === null || subtask.answer === \"\"){\n    subtask.answer=\"[]\";\n  }\n  currenSubTask.value = subtask;\n  currenSubTask.value.answer = JSON.parse(currenSubTask.value.answer)\n}\n\n// 下载数据的函数\nfunction downloadData() {\n  console.log(subTasks.value)\n\n  const columns = ['子任务ID', '内容', '标注结果']; // 添加列名\n  let csvContent = columns.join(',') + '\\n'; // 开始 CSV 内容，包含列名\n\n  // 过滤出需要的字段并追加到 CSV 格式\n  csvContent += subTasks.value\n      .map(subTask => {\n        // 检查当前任务的数据类型是否为图片\n        if (currentSubTaskType.value === '文本') {\n          // 如果是文本类型，返回完整文本内容\n          return [\n            subTask.subtask_index,\n            subTask.content,\n            subTask.answer,\n          ];\n        } else {\n          // 如果是其他类型，返回文件名\n          const fileName = subTask.content.split('/').pop(); // 获取路径中的文件名\n          return [\n            subTask.subtask_id,    // 子任务 ID\n            fileName,      // 使用文件名替代完整内容\n            subTask.answer,  // 标注结果\n          ];\n        }\n      })\n      .map(row => row.join(',')) // 将每个子数组的元素用逗号连接\n      .join('\\n'); // 用换行符将每一行连接起来\n\n  // 创建 Blob 对象\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n\n  // 创建下载链接\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.setAttribute('download', `task-${currentTask.value.task_name}_subtasks_utf8.csv`); // 指定下载文件的名称\n  document.body.appendChild(link); // 将链接添加到文档\n  link.click(); // 触发下载\n  document.body.removeChild(link); // 下载后移除链接\n}\nconst checkApprovalStatus = (status) => {\n  return !(status === \"审核中\" || status === \"审核未通过\");\n}\n</script>\n\n<style scoped lang=\"scss\">\n.task-actions {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.layout-container {\n  display: flex;\n  height: 100vh;\n}\n</style>","import script from \"./MyPostedTaskView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MyPostedTaskView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MyPostedTaskView.vue?vue&type=style&index=0&id=6d7db2be&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6d7db2be\"]])\n\nexport default __exports__","<template>\n  <!--  element plus的容器-->\n  <el-container class=\"layout-container\">\n    <!-- 左侧菜单 -->\n    <NavBar/>\n    <!-- 右侧主区域 -->\n    <el-container>\n      <el-header style=\"font-size: large; display: flex; justify-content: center; align-items: center;\">\n        任务广场\n      </el-header>\n      <el-card header=\"个人信息\" shadow=\"never\">\n        <UserInformation current-page=\"task-market\"/>\n      </el-card>\n\n      <el-card shadow=\"never\">\n        <template #header>\n          <span>您已领取的任务列表如下</span>&nbsp;&nbsp;\n          <el-icon><Files /></el-icon>\n        </template>\n        <el-table\n            size=\"large\"\n            :data=\"tasks\"\n            default-sort=\"{ prop: 'deadline_time', order: 'descending' }\"\n            stripe\n            height=\"400px\"\n            style=\"width: 100%; max-height: 400px; overflow-y: auto;\"\n        >\n          <el-table-column prop=\"task_id\"  label=\"任务ID\" />\n          <el-table-column prop=\"publisher\" label=\"发布者\"/>\n          <el-table-column prop=\"task_name\" label=\"任务名称\"/>\n          <el-table-column prop=\"data_type\" sortable label=\"数据类型\"/>\n          <el-table-column prop=\"question_type\" sortable label=\"问题类型\"/>\n          <el-table-column prop=\"deadline_time\" sortable label=\"截止日期\"/>\n          <el-table-column prop=\"each_pay\" label=\"报酬\"/>\n          <el-table-column prop=\"task_status\" sortable label=\"当前状态\"/>\n          <el-table-column label=\"Operations\">\n            <template #default=\"scope\">\n              <el-button\n                  size=\"large\"\n                  @click=\"viewTaskDetail(scope.row)\"\n                  :disabled=\"checkTaskDeadline(scope.row.deadline_time,scope.row.task_status)\"\n              >\n                {{ checkTaskDeadline(scope.row.deadline_time,scope.row.task_status) ? '任务已截止' : '查看详情' }}\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-card>\n    </el-container>\n  </el-container>\n</template>\n\n<script setup>\nimport NavBar from '@/components/NavBar.vue';\nimport UserInformation from \"@/components/UserInformation.vue\";\nimport axios from 'axios';\nimport {ref, onMounted} from 'vue';\nimport {Files} from \"@element-plus/icons-vue\";\nimport router from \"@/router\";\nimport dayjs from 'dayjs';\nconst tasks = ref([]);\n\n\nasync function fetchTasks() {\n  try {\n    // TODO url 修改后端请求 和后端修改 请求任务数据的函数\n    const response = await axios.get('http://82.156.202.232:8000/get_tasks/',{params:{receiver:sessionStorage.getItem(\"username\")}});\n    tasks.value = response.data[\"data\"];\n  } catch (error) {\n    console.error('请求任务数据失败：', error);\n  }\n}\n\nfunction viewTaskDetail(task) {\n  router.push({ name: 'task-detail', params: { task_id: task.task_id} });\n  sessionStorage.setItem(\"currentTaskId\",task.task_id);\n  sessionStorage.setItem(\"currentTask\",JSON.stringify(task));\n  sessionStorage.setItem(\"currentTaskDataType\",task.data_type)\n}\n\nconst checkTaskDeadline = (deadline_time,status) => {\n  const taskDeadline = dayjs(deadline_time);\n  if (status === \"提前终止\") {\n    return true;\n  }\n  return dayjs().isAfter(taskDeadline, 'day');\n};\n// 组件挂载后请求数据\nonMounted(() => {\n  fetchTasks();\n});\n</script>\n\n<style scoped lang=\"scss\">\n.layout-container {\n  display: flex;\n  height: 100vh;\n}\n\n</style>","import script from \"./MyWorkView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MyWorkView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MyWorkView.vue?vue&type=style&index=0&id=2ea47d01&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2ea47d01\"]])\n\nexport default __exports__","<template>\n  <div class=\"parent-container\">\n    <el-card shadow=\"never\" style=\"width: 60%\">\n      <div id=\"image-label-area\"></div>\n    </el-card>\n  </div>\n  <el-card v-if=\"currentLabel\" class=\"label-info\">\n    <div class=\"label-info-content\">\n      <div class=\"label-name-input\">\n        <label for=\"label-name\">标签名称:</label>\n        <el-input id=\"label-name\" type=\"text\" v-model=\"currentLabel.name\" @change=\"updateLabelName\"\n                  style=\"width: 240px\" placeholder=\"请输入对象名称\" />\n        <label for=\"label-color\">标签颜色:</label>\n        <el-color-picker id=\"label-color\" type=\"color\" v-model=\"currentLabel.color\" @change=\"updateLabelColor\" />\n      </div>\n      <label>(x: {{ currentLabel.x }}, y: {{ currentLabel.y }})</label>\n      <label>宽度: {{ currentLabel.width}}  高度: {{ currentLabel.height}}</label>\n      <el-button type=\"danger\" @click=\"removeLabel(currentLabel.uuid)\">删除</el-button>\n    </div>\n    <div class=\"button-group\">\n      <el-button type=\"primary\" @click=\"removeAllLabels\" >一键删除</el-button>\n      <el-button type=\"primary\" @click=\"saveLabels\">保存标签结果</el-button>\n    </div>\n  </el-card>\n  <el-card v-else>\n    <p>共标注 {{labelsCount}} 条数据</p>\n    <div class=\"button-group\">\n      <el-button type=\"primary\" @click=\"removeAllLabels\" >一键删除</el-button>\n      <el-button type=\"primary\" @click=\"saveLabels\">保存标签结果</el-button>\n    </div>\n  </el-card>\n</template>\n<script setup>\n\nimport {ref, defineProps,defineEmits, watch, onMounted} from 'vue';\nimport SimpleImageLabel from 'simple-image-label';\nconst simpleImageLabel = ref(null);\nconst currentLabel = ref(null);\nlet labelsCount =ref(0)\nconst props = defineProps({\n  subtask:Object\n});\nconst emit = defineEmits(['contextmenu', 'labelClick', 'error', 'labelRemoved', 'labelUpdated','saveLabelsToAnswer']);\n\nonMounted(() => {\n  if (!props.subtask.content) {\n    console.error('Image URL is required');\n    return;\n  }\n\n  simpleImageLabel.value = new SimpleImageLabel({\n    el: 'image-label-area',\n    imageUrl: props.subtask.content,\n    labels: [],\n    contextmenu: (e) => {\n      emit('contextmenu', e);\n    },\n    labelClick: (label) => {\n      currentLabel.value = label;\n      emit('labelClick', label);\n      labelsCount.value = simpleImageLabel.value.labels.length;\n    },\n    error: (e) => {\n      emit('error', e);\n    }\n  });\n});\nwatch(() => props.subtask, () => {\n  // 当 subtask 发生变化时，执行以下操作\n  simpleImageLabel.value.setImage(props.subtask.content);\n  simpleImageLabel.value.setLabels([]);\n  currentLabel.value = null;\n  labelsCount.value =0;\n});\nconst saveLabels = () => {\n  const annotationData = simpleImageLabel.value.getLabels();\n//  let processedData = annotationData.map(label => {\n//    return {\n//      name: label.name,\n//      yolo:{x: label.x,\n//        y: label.y,\n//        width: label.width,\n//        height: label.height},\n//      coordinate: simpleImageLabel.value.getCoordinate(label)\n//    };\n//  });\n  emit(\"saveLabelsToAnswer\",JSON.stringify(annotationData));\n}\nconst removeAllLabels = () => {\n  simpleImageLabel.value.removeAllLabels();\n  labelsCount.value =0;\n  currentLabel.value = null;\n};\nconst removeLabel = (uuid) => {\n  simpleImageLabel.value.removeLabelByUuid(uuid);\n  currentLabel.value = null;\n  emit('labelRemoved', uuid);\n};\n\nconst updateLabelName = () => {\n  simpleImageLabel.value.setLabelByUuid(currentLabel.value.uuid, {\n    name: currentLabel.value.name\n  });\n  emit('labelUpdated', currentLabel.value);\n};\n\nconst updateLabelColor = () => {\n  simpleImageLabel.value.setLabelByUuid(currentLabel.value.uuid, {\n    color: currentLabel.value.color\n  });\n  emit('labelUpdated', currentLabel.value);\n};\n</script>\n\n<style scoped>\n.parent-container {\n  display: flex;\n  justify-content: center; /* 水平居中 */\n  align-items: center; /* 垂直居中 */\n}\n.button-group {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n.label-info {\n  margin-top: 20px;\n}\n\n\n.label-info-content {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.label-name-input,\n.label-color-input {\n  display: flex;\n  align-items: center;\n}\n\n.label-name-input label,\n.label-color-input label {\n  width: 80px;\n}\n\n.label-name-input input,\n.label-color-input input {\n  flex: 1;\n}\n</style>","import script from \"./ImageFramer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageFramer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ImageFramer.vue?vue&type=style&index=0&id=34d181e3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-34d181e3\"]])\n\nexport default __exports__","<template>\n  <div>\n    <el-card shadow=\"never\">\n    <h3>任务描述: </h3>\n      <span>{{ currentTask.task_description }}</span>\n    <!-- 根据数据类型显示数据内容 -->\n      <!-- TODO 加一个问题题干 -->\n      <h3>问题题干: </h3>\n      <span>{{ currentTask.question_description }}</span>\n    <!-- 文本 -->\n    <div v-if=\"currentTask.data_type === '文本'\">\n      <h3>文本内容: </h3>\n      <span>{{ subtask.content }}</span>\n        <!-- 假设文本内容存储在 text_content 字段 -->\n    </div>\n    <!-- 图像 -->\n      <el-card shadow=\"never\" v-if=\"currentTask.data_type === '图片' && currentTask.question_type !== '框图题'\">\n    <div>\n      <el-image :src=\"subtask.content\" alt=\"任务图片\" fit='contain'/> <!-- 假设图片URL存储在 image_url 字段 -->\n    </div>\n      </el-card>\n    </el-card>\n    <!-- 根据问题类型显示不同的表单 -->\n    <div v-if=\"currentTask.question_type === '单选题'\">\n      <el-card shadow=\"never\">\n        <el-radio-group v-model=\"annotationResult\">\n          <el-radio\n              v-for=\"option in currentTask.options\"\n              :label=\"option\"\n              :key=\"option\"\n          >{{ option }}</el-radio>\n        </el-radio-group>\n      </el-card>\n\n    </div>\n    <div v-else-if=\"currentTask.question_type === '多选题'\">\n      <el-card shadow=\"never\">\n      <el-checkbox-group v-model=\"annotationResult\">\n        <el-checkbox\n            v-for=\"option in currentTask.options\"\n            :label=\"option\"\n            :key=\"option\"\n        >{{ option }}</el-checkbox>\n      </el-checkbox-group>\n      </el-card>\n    </div>\n    <div v-else-if=\"currentTask.question_type === '填空题'\">\n      <!-- 无需添加, 在下一个表单编辑并进行提交-->\n    </div>\n    <div v-else-if=\"currentTask.question_type === '框图题'\">\n      <!-- 根据需要添加框图表单 -->\n      <ImageFramer :subtask=\"props.subtask\" @save-labels-to-answer=\"updateAnswer\"/>\n    </div>\n\n    <!-- 显示标注结果，并提交-->\n    <el-card shadow=\"never\">\n      <el-form label-width=\"100px\">\n        <el-form-item label=\"标注结果\">\n          <el-input v-model=\"annotationResult\" placeholder=\"标注结果\" :disabled=\"currentTask.question_type !== '填空题'\" type=\"textarea\" ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitAnnotation\">提交标注</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, watch } from 'vue';\nimport axios from 'axios';\nimport {ElMessage, ElMessageBox} from 'element-plus';\nimport ImageFramer from \"@/components/ImageFramer.vue\";\n// 定义组件的 props\nconst props = defineProps({\n  currentTask: {\n    type: Object,\n    required: true\n  },\n  subtask: {\n    type: Object,\n    required: true\n  }\n});\n\n// 创建一个响应式变量来存储标注结果\nconst annotationResult = ref([]);\n\n// 观察 subtask 变化，以更新 annotationResult\nwatch(() => props.subtask, () => {\n  // 当 subtask 发生变化时，执行以下操作\n  annotationResult.value = []; // 重置标注结果\n});\nconst updateAnswer = (Message) =>{\n  annotationResult.value = Message;\n}\n// TODO 提交标注的函数\nconst submitAnnotation = () => {\n  if (!annotationResult.value) {\n    ElMessage.error('标注结果不能为空');\n    return;\n  }\n\n  // 使用 ElMessageBox.confirm 来弹出确认对话框\n  ElMessageBox.confirm('提交后无法修改，确定要提交标注结果吗?', '提交确认', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(() => {\n    // 用户点击“确定”，发送数据到服务器\n    const data = {\n      task_id: props.subtask.task,\n      subtask_index: props.subtask.subtask_index,\n      answer: JSON.stringify(annotationResult.value)\n    };\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    }\n    // TODO url 修改请求地址\n    axios.post(`http://82.156.202.232:8000/submit_subtask_answer/`, data, header)\n        // eslint-disable-next-line no-unused-vars\n  .then(response => {\n      ElMessage.success('标注提交成功');\n      // 如果需要，可以在这里添加关闭抽屉的逻辑\n      window.location.reload(); // 如果需要刷新页面\n    })\n        .catch(error => {\n          ElMessage.error('标注提交失败');\n          console.error('Submit annotation error:', error);\n        });\n  }).catch(() => {\n    // 用户点击“取消”时的逻辑\n    ElMessage.info('已取消提交');\n  });\n};\n\n\n</script>\n\n<style scoped lang=\"scss\">\n\n</style>","import script from \"./TaskAnnotation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaskAnnotation.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <el-container class=\"layout-container\">\n    <!-- 左侧菜单 -->\n    <NavBar/>\n    <!-- 右侧主区域 -->\n    <el-container>\n      <el-header style=\"font-size: large; display: flex; justify-content: center; align-items: center;\">\n        任务详情\n      </el-header>\n      <el-card header=\"个人信息\" shadow=\"never\">\n        <UserInformation current-page=\"task-detail\"/>\n      </el-card>\n      <TaskDetail current-page=\"task-market-detail\">\n      </TaskDetail>\n\n      <el-card shadow=\"never\">\n        <template #header>\n          <span>子任务列表</span>&nbsp;&nbsp;\n          <el-icon><Files /></el-icon>\n        </template>\n        <el-table\n            size=\"large\"\n            :data=\"subTasks\"\n            stripe\n            height=\"400px\"\n            style=\"width: 100%; max-height: 400px; overflow-y: auto;\"\n        >\n          <el-table-column prop=\"subtask_index\" label=\"子任务序号\" />\n          <el-table-column prop=\"content\" label=\"内容\">\n            <template #default=\"scope\" v-if=\"currentTask.data_type === '图片'\">\n              <el-image style=\"width: 100px; height: 100px\" :src=scope.row.content :fit=\"'contain'\" />\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"receiver\" label=\"领取者\" />\n          <el-table-column prop=\"finish_time\" label=\"完成时间\" />\n          <el-table-column prop=\"subtask_status\" label=\"状态\" />\n          <el-table-column fixed=\"right\" label=\"操作\" width=\"300\">\n            <template #default=\"scope\">\n              <el-button\n                  size=\"default\"\n                  type=\"warning\"\n                  :disabled=\"scope.row.receiver !== null\"\n                  @click=\"handleClaim(scope.row)\"\n              >\n                {{ scope.row.receiver ? '已领取' : '领取' }}\n              </el-button>\n              <el-button\n                  v-if=\"scope.row.subtask_status === '未完成' || scope.row.subtask_status === '未领取'\"\n                  size=\"default\"\n                  type=\"danger\"\n                  :disabled=\"scope.row.receiver !== currentUserName\"\n                  @click=\"handleAnnotateDrawer(scope.row)\"\n              >\n                {{ canAnnotate(scope.row) ? '请标注' : '无需标注' }}\n              </el-button>\n              <el-button\n                  v-else\n                  size=\"default\"\n                  type=\"primary\"\n                  :disabled=\"scope.row.receiver !== currentUserName\"\n                  @click=\"viewResults(scope.row)\"\n              >\n                查看结果\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-card>\n    </el-container>\n\n    <!-- 添加抽屉组件 -->\n    <el-drawer\n        title=\"标注任务\"\n        v-model=\"drawerVisible\"\n        size=\"50%\"\n        :before-close=\"handleClose\"\n    >\n      <!-- 抽屉内容，用于标注操作 -->\n      <TaskAnnotation :subtask=\"currentSubTask\" :current-task=\"currentTask\"/>\n    </el-drawer>\n  </el-container>\n\n  <el-dialog :show-close=\"false\" v-model=\"dialogAnswerVisible\" title=\"标注结果\" width=\"800\">\n    <div v-if=\"currentTask.question_type === '框图题'\">\n      <image-framer-result :subtask=\"currentViewSubTask\"></image-framer-result>\n    </div>\n    <div v-else>\n      <h3>标注结果：{{ currentViewSubTask.answer }}</h3>\n    </div>\n    <el-button type=\"primary\" @click=\"dialogAnswerVisible = false\">返 回</el-button>\n  </el-dialog>\n\n</template>\n\n<script setup>\nimport NavBar from '@/components/NavBar.vue' // 导入NavBar组件\nimport TaskAnnotation from \"@/components/TaskAnnotation.vue\";\nimport UserInformation from \"@/components/UserInformation.vue\";\nimport TaskDetail from \"@/components/TaskDetail.vue\";\nimport { ref,onMounted } from 'vue';\nimport axios from 'axios';\nimport {useRoute} from \"vue-router\";\nimport {Files} from \"@element-plus/icons-vue\";\nimport {ElMessage, ElMessageBox} from \"element-plus\";\nimport ImageFramerResult from \"@/components/ImageFramerResult.vue\";\nconst route = useRoute(); // 获取当前路由对象\nconst { task_id } = route.params; // 假设你的路由定义中包含了 task_id 参数\nconst currentTask = JSON.parse(sessionStorage.getItem(\"currentTask\"));\n// 假设这是从API获取的子任务数据 TODO 和后端修改\nconst subTasks = ref([]);\n\nconst fetchSubTasks = async () => {\n  if (task_id) {\n    try {\n      // TODO 向后端查询对应任务ID的所有子任务列表，改成根据id和index查询？？\n      const response = await axios.get(`http://82.156.202.232:8000/get_subtasks/`, {\n        params: { task_id: task_id }\n      });\n      // 检查响应状态\n      if (response.data.status === \"ok\") {\n        // 将响应数据赋值给 subTasks 变量\n        subTasks.value = response.data.data;\n\n      } else {\n        // 处理后端返回的错误状态\n        console.error('获取子任务失败:', response.data.message);\n        // 这里可以添加额外的错误处理逻辑，比如显示错误消息给用户\n      }\n    } catch (error) {\n      console.error('请求子任务失败:', error);\n    }\n  }\n};\n\nonMounted(() =>{\n  fetchSubTasks();\n  const user = JSON.parse(sessionStorage.getItem('user'));\n  currentUserId.value = user[\"user_id\"];\n  currentUserName.value =sessionStorage.getItem('username');\n});\n\n\n\n// 假设的当前用户ID\nconst currentUserId = ref(null); // 用实际的当前用户ID替换\nconst currentUserName = ref(''); // 用实际的当前用户名称替换\n// 检查是否是当前用户且任务未完成\n\n\n\nconst handleClaim = (subtask) => {\n  if (!subtask.receiver) {\n    // 执行领取任务的逻辑\n    const currentUser = sessionStorage.getItem('username');\n\n    // 使用ElMessageBox.confirm来弹出确认对话框\n    ElMessageBox.confirm('确定要领取此任务吗?', '领取任务', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning',\n    })\n        .then(() => {\n          // 用户点击“确定”，更新任务的receiver\n          console.log('Claiming task:', subtask);\n          // 调用函数更新后端任务状态\n          updateTaskReceiver(subtask, currentUser).then(() => {\n            // window.location.reload();\n          }).catch((error) => {\n            console.error('Failed to update task receiver:', error);\n          });\n        })\n        .catch(() => {\n          // 用户点击“取消”或关闭对话框时的操作\n          console.log('Claiming task canceled by user.');\n        });\n  }\n};\n// 假设这是更新任务接收者状态的异步函数\n\n// eslint-disable-next-line no-unused-vars\nconst updateTaskReceiver = async (subtask, receiver) => {\n  try {\n    console.log(subtask)\n    // 构造请求体，包含所需的参数\n    const data = {\n      task_id: subtask.task, // 假设subtaskId对象包含taskId属性\n      receiver: receiver,\n      subtask_index:subtask.subtask_index\n    };\n    const header = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n    console.log(data)\n    const response = await axios.post('http://82.156.202.232:8000/update_subtask_receiver/', data,header);\n    console.log(response.data)\n    // 检查响应状态\n    if (response.data.status === 'ok') {\n      // 更新成功\n      ElMessage.success('子任务领取成功');\n      subtask.receiver = receiver; // 这里直接修改了任务的receiver属性\n      subtask.subtask_status = '未完成';\n      // window.location.reload();\n      return response.data;\n    } else if (response.data.status === 'error') {\n      // 更新失败，抛出错误信息\n      ElMessage.error(response.data.message);\n    }\n  } catch (error) {\n    // 捕获并处理错误\n    console.error('请求失败:', error);\n  }\n};\n\nconst canAnnotate = (task) => {\n  return task.receiver === sessionStorage.getItem('username');\n};\n// 控制抽屉显示的响应式变量\nconst drawerVisible = ref(false);\nconst currentSubTask = ref(null);\n\n// ... 省略其他代码 ...\n\n// 处理标注任务的函数\nconst handleAnnotateDrawer = (task) => {\n  if (canAnnotate(task)) {\n    // 设置当前标注的子任务\n    currentSubTask.value = task;\n    // 显示抽屉\n    drawerVisible.value = true;\n  }\n};\n\n// 抽屉关闭前的回调函数\nconst handleClose = (done) => {\n  // 可以在这里执行一些清理操作，例如重置表单数据\n  done(); // 调用 done 以关闭抽屉\n};\n\nconst dialogAnswerVisible =ref(false)\nconst currentViewSubTask =ref(null)\nfunction viewResults(subtask){\n  dialogAnswerVisible.value=true\n  if (subtask.answer === \"\" || subtask.answer === null){\n    subtask.answer=\"[]\";\n  }\n  currentViewSubTask.value = JSON.parse(JSON.stringify(subtask));\n  console.log(currentViewSubTask.value)\n  currentViewSubTask.value.answer = JSON.parse(currentViewSubTask.value.answer)\n}\n\n</script>\n\n<style scoped lang=\"scss\">\n.layout-container {\n  display: flex;\n  height: 100vh;\n}\n\nel-container {\n  flex: 1;\n}\n</style>","import script from \"./TaskDetailView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaskDetailView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TaskDetailView.vue?vue&type=style&index=0&id=39f801ba&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39f801ba\"]])\n\nexport default __exports__","<template>\n  <!--  element plus的容器-->\n  <el-container class=\"layout-container\">\n    <!-- 左侧菜单 -->\n    <NavBar/>\n    <!-- 右侧主区域 -->\n    <el-container>\n      <el-header style=\"font-size: large; display: flex; justify-content: center; align-items: center;\">\n        待审核任务\n      </el-header>\n\n      <el-card shadow=\"never\">\n        <template #header>\n          <span>已发布任务列表</span>&nbsp;&nbsp;\n          <el-icon><Files /></el-icon>\n        </template>\n        <el-table\n            size=\"large\"\n            :data=\"tasks\"\n            stripe\n            height=\"400px\"\n            style=\"width: 100%; max-height: 400px; overflow-y: auto;\"\n        >\n          <el-table-column prop=\"task_id\"  label=\"任务ID\" />\n          <el-table-column prop=\"publisher\" label=\"发布者\"/>\n          <el-table-column prop=\"task_name\" label=\"任务名称\"/>\n          <el-table-column prop=\"data_type\" label=\"数据类型\"/>\n          <el-table-column prop=\"question_type\" label=\"问题类型\"/>\n          <el-table-column prop=\"task_status\" label=\"当前状态\"/>\n          <el-table-column label=\"查看详情\">\n            <template #default=\"scope\">\n              <el-button size=\"large\" @click=\"showSubTasksDrawer(scope.row)\">\n                点击查看详情\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-card>\n    </el-container>\n  </el-container>\n\n\n  <!-- 添加抽屉 -->\n  <el-drawer\n      title=\"子任务详情\"\n      v-model=\"subTasksDrawerVisible\"\n      size=\"70%\"\n      :show-close=\"false\"\n  >\n    <template #header=\"{ close, titleId, titleClass }\">\n      <h4 :id=\"titleId\" :class=\"titleClass\">子任务列表</h4>\n      <el-button type=\"danger\" @click=\"close\">\n        <el-icon class=\"el-icon--left\"><CircleCloseFilled /></el-icon>\n        Close\n      </el-button>\n    </template>\n    <div v-if=\"subTasksDrawerVisible\">\n      <!-- 子任务列表 -->\n      <TaskDetail current-page=\"posted-task\"/>\n      <el-card shadow=\"never\">\n        <el-table :data=\"subTasks\" height=\"300\">\n          <el-table-column prop=\"subtask_index\" label=\"子任务索引\" />\n          <el-table-column prop=\"content\" label=\"内容\">\n            <template #default=\"scope\" v-if=\"currentSubTaskType === '图片'\">\n              <el-image style=\"width: 100px; height: 100px\" :src=scope.row.content :fit=\"'contain'\" />\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"subtask_status\" label=\"当前状态\" />\n          <!-- 根据需要添加更多列 -->\n        </el-table>\n      </el-card>\n      <el-card shadow=\"never\">\n        <!-- 添加表单 -->\n        <el-form :model=\"form\" @submit.prevent=\"handleSubmit\">\n          <el-form-item label=\"审核结果\">\n            <el-radio-group v-model=\"form.approvalStatus\">\n              <el-radio :label=\"true\">通过</el-radio>\n              <el-radio :label=\"false\">不通过</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <template v-if=\"!form.approvalStatus\">\n            <el-form-item label=\"不通过理由\">\n              <el-input type=\"textarea\" v-model=\"form.rejectionReason\"></el-input>\n            </el-form-item>\n          </template>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"handleSubmit\">提交审核</el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n    </div>\n  </el-drawer>\n\n  <el-dialog :show-close=\"false\" v-model=\"dialogImageVisible\" title=\"标注结果\" width=\"800\" >\n    <image-framer-result :subtask=\"currenSubTask\"></image-framer-result>\n    <el-button type=\"primary\" @click=\"dialogImageVisible = false\">返 回</el-button>\n  </el-dialog>\n</template>\n\n<script setup>\nimport NavBar from '@/components/NavBar.vue';\nimport TaskDetail from \"@/components/TaskDetail.vue\";\nimport ImageFramerResult from \"@/components/ImageFramerResult.vue\";\nimport axios from 'axios';\nimport {ref, onMounted} from 'vue';\nimport {Files} from \"@element-plus/icons-vue\";\nimport { CircleCloseFilled } from '@element-plus/icons-vue'\nimport {ElMessage} from \"element-plus\";\nconst tasks = ref([]);\n\n// 请求任务数据的函数\nasync function fetchTasks() {\n  const params = {\n    task_status:\"审核中\"\n  }\n  try {\n    const response = await axios.get('http://82.156.202.232:8000/get_tasks/',{params:params});\n    tasks.value = response.data[\"data\"];\n  } catch (error) {\n    console.error('请求任务数据失败：', error);\n  }\n}\n\n// 组件挂载后请求数据\nonMounted(() => {\n  fetchTasks();\n});\n\n\n// 控制抽屉的显示和隐藏\nconst currentSubTaskType = ref('')\nconst currentQuestionType = ref('')\nconst subTasksDrawerVisible = ref(false);\n// 子任务数据\nconst subTasks = ref([]);\nconst currentTask =ref(Object)\n\nconst dialogImageVisible = ref(false)\nconst currenSubTask = ref(null)\n// 获取子任务数据的函数\nasync function fetchSubTasks(task) {\n  try {\n    currentSubTaskType.value = task.data_type;\n    currentQuestionType.value = task.question_type;\n    const response = await axios.get(`http://82.156.202.232:8000/get_subtasks/`, { params: { task_id: task.task_id } });\n    subTasks.value = response.data[\"data\"];\n  } catch (error) {\n    console.error('请求子任务数据失败：', error);\n  }\n}\n// 显示子任务抽屉的函数\nfunction showSubTasksDrawer(task) {\n  fetchSubTasks(task); // 获取子任务数据\n  currentTask.value=task;\n  subTasksDrawerVisible.value = true; // 显示抽屉\n  sessionStorage.setItem(\"currentTaskId\",task.task_id);\n  form.value = {\n    approvalStatus: true, // 默认为“通过”\n    rejectionReason: '' // 不通过理由\n  }\n}\n// 表单数据\nconst form = ref({\n  approvalStatus: true, // 默认为“通过”\n  rejectionReason: '' // 不通过理由\n});\n\n// 提交表单的函数\nasync function handleSubmit() {\n  try {\n    const data = {\n      task_id: currentTask.value.task_id,\n      approvalStatus: form.value.approvalStatus,\n      rejectionReason: form.value.rejectionReason\n    };\n    const header = {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    const response = await axios.post('http://82.156.202.232:8000/admin_submit_review/', data,{ headers: header });\n    // 处理响应\n    // 根据响应显示消息提示\n    if (response.data.status === 'ok') {\n      // 审核结果提交成功\n      ElMessage.success(response.data.message);\n      subTasksDrawerVisible.value = false; // 关闭抽屉\n      window.location.reload();\n    } else {\n      // 审核结果提交失败\n      ElMessage.error(response.data.message);\n    }\n  } catch (error) {\n    // 网络或其他错误，显示错误消息\n    ElMessage.error('提交审核失败，请稍后重试。');\n    console.error('提交审核失败：', error);\n  }\n}\n\n</script>\n\n<style scoped lang=\"scss\">\n.layout-container {\n  display: flex;\n  height: 100vh;\n}\n\n.task-actions {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px; /* 可根据需要添加上边距 */\n}\n</style>","import script from \"./AdminTaskView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminTaskView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AdminTaskView.vue?vue&type=style&index=0&id=21d107e6&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-21d107e6\"]])\n\nexport default __exports__","<template>\n  <!--  element plus的容器-->\n  <el-container class=\"layout-container\">\n    <!-- 左侧菜单 -->\n    <NavBar/>\n    <!-- 右侧主区域 -->\n    <el-container>\n      <el-header style=\"font-size: large; display: flex; justify-content: center; align-items: center;\">\n        被举报任务列表\n      </el-header>\n\n      <el-card shadow=\"never\">\n        <template #header>\n          <span>已发布任务列表</span>&nbsp;&nbsp;\n          <el-icon><Files /></el-icon>\n        </template>\n        <el-table\n            size=\"large\"\n            :data=\"tasks\"\n            stripe\n            height=\"400px\"\n            style=\"width: 100%; max-height: 400px; overflow-y: auto;\"\n        >\n          <el-table-column prop=\"task_id\"  label=\"任务ID\" />\n          <el-table-column prop=\"publisher\" label=\"发布者\"/>\n          <el-table-column prop=\"task_name\" label=\"任务名称\"/>\n          <el-table-column prop=\"data_type\" label=\"数据类型\"/>\n          <el-table-column prop=\"question_type\" label=\"问题类型\"/>\n          <el-table-column prop=\"task_status\" label=\"当前状态\"/>\n          <el-table-column label=\"查看详情\">\n            <template #default=\"scope\">\n              <el-button size=\"large\" @click=\"showSubTasksDrawer(scope.row)\">\n                点击查看详情\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-card>\n    </el-container>\n  </el-container>\n\n\n  <!-- 添加抽屉 -->\n  <el-drawer\n      title=\"子任务详情\"\n      v-model=\"subTasksDrawerVisible\"\n      size=\"70%\"\n      :show-close=\"false\"\n  >\n    <template #header=\"{ close, titleId, titleClass }\">\n      <h4 :id=\"titleId\" :class=\"titleClass\">子任务列表</h4>\n      <el-button type=\"danger\" @click=\"close\">\n        <el-icon class=\"el-icon--left\"><CircleCloseFilled /></el-icon>\n        Close\n      </el-button>\n    </template>\n    <div v-if=\"subTasksDrawerVisible\">\n      <!-- 子任务列表 -->\n      <TaskDetail current-page=\"posted-task\"/>\n      <el-card shadow=\"never\">\n        <el-table :data=\"subTasks\" height=\"500\">\n          <el-table-column prop=\"subtask_id\" label=\"子任务ID\" />\n          <el-table-column prop=\"content\" label=\"内容\">\n            <template #default=\"scope\" v-if=\"currentSubTaskType === '图片'\">\n              <el-image style=\"width: 100px; height: 100px\" :src=scope.row.content :fit=\"'contain'\" />\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"subtask_status\" label=\"当前状态\" />\n          <el-table-column prop=\"answer\" label=\"标注结果\" v-if=\"currentQuestionType!=='框图题'\" />\n          <el-table-column label=\"标注结果\" v-if=\"currentQuestionType==='框图题'\">\n            <template #default=\"scope\">\n              <el-button size=\"large\" @click=\"viewImageAnswer(scope.row)\" :disabled=\"scope.row.subtask_status==='未完成' || scope.row.subtask_status==='未领取'\">\n                查看详情\n              </el-button>\n            </template>\n          </el-table-column>\n          <!-- 根据需要添加更多列 -->\n          <!-- 在el-table中添加按钮列 -->\n          <el-table-column label=\"操作\">\n            <template #default=\"scope\">\n              <el-button type=\"success\" size=\"default\" @click=\"handleReportSuccess(scope.row)\">举报成功</el-button>\n              <el-button type=\"danger\" size=\"default\" @click=\"handleReportFailure(scope.row)\">举报失败</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-card>\n    </div>\n  </el-drawer>\n\n  <el-dialog :show-close=\"false\" v-model=\"dialogImageVisible\" title=\"标注结果\" width=\"800\" >\n    <image-framer-result :subtask=\"currenSubTask\"></image-framer-result>\n    <el-button type=\"primary\" @click=\"dialogImageVisible = false\">返 回</el-button>\n  </el-dialog>\n</template>\n\n<script setup>\nimport NavBar from '@/components/NavBar.vue';\nimport TaskDetail from \"@/components/TaskDetail.vue\";\nimport ImageFramerResult from \"@/components/ImageFramerResult.vue\";\n//import UserInformation from \"@/components/UserInformation.vue\";\nimport axios from 'axios';\nimport {ref, onMounted} from 'vue';\nimport {Files} from \"@element-plus/icons-vue\";\nimport { CircleCloseFilled } from '@element-plus/icons-vue'\nconst tasks = ref([]);\n\n// 请求任务数据的函数\nasync function fetchTasks() {\n  const params = {\n    subtask_status:\"举报中\"\n  }\n  try {\n    // TODO url 修改请求地址\n    const response = await axios.get('http://82.156.202.232:8000/get_tasks/',{params:params});\n    tasks.value = response.data[\"data\"];\n  } catch (error) {\n    console.error('请求任务数据失败：', error);\n  }\n}\n\n// 组件挂载后请求数据\nonMounted(() => {\n  fetchTasks();\n});\n\n\n// 控制抽屉的显示和隐藏\nconst currentSubTaskType = ref('')\nconst currentQuestionType = ref('')\nconst subTasksDrawerVisible = ref(false);\n// 子任务数据\nconst subTasks = ref([]);\nconst currentTask =ref(Object)\n\nconst dialogImageVisible = ref(false)\nconst currenSubTask = ref(null)\n// 获取子任务数据的函数\nasync function fetchSubTasks(task) {\n  try {\n    currentSubTaskType.value = task.data_type;\n    currentQuestionType.value = task.question_type;\n    // TODO url 修改请求地址\n    const response = await axios.get(`http://82.156.202.232:8000/get_subtasks/`, { params: { task_id: task.task_id,subtask_status:'举报中'} });\n    subTasks.value = response.data[\"data\"];\n  } catch (error) {\n    console.error('请求子任务数据失败：', error);\n  }\n}\n// 显示子任务抽屉的函数\nfunction showSubTasksDrawer(task) {\n  fetchSubTasks(task); // 获取子任务数据\n  currentTask.value=task;\n  subTasksDrawerVisible.value = true; // 显示抽屉\n  sessionStorage.setItem(\"currentTaskId\",task.task_id);\n}\nfunction viewImageAnswer(subtask) {\n  dialogImageVisible.value = true;\n  if (subtask.answer === null || subtask.answer === \"\"){\n    subtask.answer=\"[]\";\n  }\n  currenSubTask.value = subtask;\n  currenSubTask.value.answer = JSON.parse(currenSubTask.value.answer)\n}\n\n// 处理举报成功的函数\nimport {ElMessage, ElMessageBox} from 'element-plus';\n\nfunction handleReportSuccess(subtask) {\n  // 构造请求数据\n  const reportData = {\n    task_id: subtask.task,\n    subtask_index: subtask.subtask_index, // 确保你有subtask_index字段\n    approvalStatus: 'true', // 举报成功，设置为true\n  };\n\n  // 构造请求头部\n  const header = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  // 发送请求到后端\n  axios.post('http://82.156.202.232:8000/process_report/', reportData, { headers: header })\n      .then(response => {\n        if (response.data.status === 'ok') {\n          // 举报成功后弹出确认框\n          ElMessageBox.confirm('处理成功', '提示', {\n            confirmButtonText: '确定',\n            type: 'success',\n            callback: action => {\n              if (action === 'confirm') {\n                // 用户点击确定后的操作，比如刷新页面\n                window.location.reload();\n              }\n            }\n          });\n        } else {\n          // 处理错误情况\n          console.error('处理失败:', response.data.message);\n          ElMessage.error('处理失败: ' + response.data.message);\n        }\n      })\n      .catch(error => {\n        console.error('请求失败:', error);\n        ElMessage.error('请求失败: ' + error.message);\n      });\n}\n\nfunction handleReportFailure(subtask) {\n  // 构造请求数据\n  const reportData = {\n    task_id: subtask.task,\n    subtask_index: subtask.subtask_index, // 确保你有subtask_index字段\n    approvalStatus: 'false', // 举报失败，设置为false\n  };\n\n  // 构造请求头部\n  const header = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  // 发送请求到后端\n  axios.post('http://82.156.202.232:8000/process_report/', reportData, { headers: header })\n      .then(response => {\n        if (response.data.status === 'ok') {\n          // 举报失败后弹出确认框\n          ElMessageBox.alert('处理成功！', '提示', {\n            confirmButtonText: '确定',\n            type: 'error',\n          }).then(() => {\n            // 用户点击确定后的操作，比如刷新子任务列表\n            window.location.reload();\n          });\n        } else {\n          // 处理错误情况\n          ElMessage.error('处理失败: ' + response.data.message);\n        }\n      })\n      .catch(error => {\n        ElMessage.error('请求失败: ' + error.message);\n      });\n}\n</script>\n\n<style scoped lang=\"scss\">\n.layout-container {\n  display: flex;\n  height: 100vh;\n}\n\n.task-actions {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px; /* 可根据需要添加上边距 */\n}\n</style>","import script from \"./AdminReportView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminReportView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AdminReportView.vue?vue&type=style&index=0&id=fd96e460&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fd96e460\"]])\n\nexport default __exports__","//导入vue-router\nimport { createRouter, createWebHistory } from 'vue-router'\n//导入组件\nimport PostTaskView from \"@/views/PostTaskView.vue\"\nimport TaskMarketView from \"@/views/TaskMarketView.vue\"\nimport PersonInfoView from \"@/views/MyPersonInfoView.vue\";\nimport UserLoginView from \"@/views/UserLoginView.vue\";\nimport HomeView from \"@/views/HomeView.vue\";\nimport MyPostedTaskView from \"@/views/MyPostedTaskView.vue\";\nimport MyWorkView from \"@/views/MyWorkView.vue\";\nimport TaskDetailView from \"@/views/TaskDetailView.vue\";\nimport AdminTaskView from \"@/views/AdminTaskView.vue\";\nimport AdminReportView from \"@/views/AdminReportView.vue\";\n//定义路由关系\nconst routes = [\n    { path: '/', name:'',component: UserLoginView},\n    { path: '/login', name:'login',component: UserLoginView },\n    { path: '/home', name:'home',component: HomeView },\n    { path: '/post-task', name:'post-task',component: PostTaskView },\n    { path: '/task-market', name:'task-market',component: TaskMarketView },\n    { path: '/personal-info', name:'personal-info',component: PersonInfoView },\n    { path: '/posted-tasks', name:'posted-tasks',component: MyPostedTaskView },\n    { path: '/tasks-to-complete', name:'tasks-to-complete',component: MyWorkView },\n    {\n        path: '/task-detail/:task_id', // 动态路由，`taskId` 是一个动态参数\n        name: 'task-detail',\n        component: TaskDetailView, // 假设您有一个名为 UserProfileView 的组件\n    },\n    { path: '/admin-task', name: 'admin-task', component: AdminTaskView,},\n    { path: '/admin-report', name:'admin-report',component: AdminReportView },\n]\n\n//创建路由器\nconst router = createRouter({\n    history: createWebHistory(),\n    routes: routes\n});\n\nexport default router","import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\n\n\ncreateApp(App).use(store).use(router).use(ElementPlus).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue_project\"] = self[\"webpackChunkvue_project\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(5005); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_router_view","script","__exports__","render","activeIndex","ref","route","useRoute","loginFlag","adminFlag","onMounted","async","value","sessionStorage","getItem","path","handleSelect","index","startsWith","alert","router","push","props","__props","user","user_id","username","email","userBalance","userCreditRank","userCurrentExp","fetchUserInfo","response","axios","get","params","data","console","log","Number","toFixed","setItem","ElMessage","error","JSON","stringify","form","task_name","task_description","data_type","task_rank","each_pay","question_description","question_type","options","publisher","deadline_time","fileName","optionText","addOption","trim","removeOption","splice","onSubmit","formData","FormData","append","toISOString","document","getElementById","files","post","headers","responseData","status","ElMessageBox","confirm","message","confirmButtonText","type","then","catch","clickHome","chooseFile","fileInputId","click","handleFileChange","e","target","length","file","validExtensions","fileExtension","name","split","pop","includes","removeFile","fileInput","disabledDate","date","today","Date","setHours","tasks","fetchTasks","handleOverdueTasks","now","dayjs","forEach","task","taskDeadline","parse","isAfter","task_status","terminateTask","postData","task_id","header","viewTaskDetail","checkTaskDeadline","checkApprovalStatus","upEXP","dictionary","messages","fetchUserData","fetchMessages","info","rechargeAmount","handleRecharge","amount","parseFloat","isNaN","balance_change","success","submitForm","isRegister","isRestPwd","correctCode","emailRight","emailing","codeEmail","emailingSeconds","usernameRight","passwordRight","passwordAgainRight","verifyCodeRight","useRouter","loginData","password","clickLogin","res","err","registerData","rePassword","verifyCode","validateUsername","rule","callback","Error","match","validatePassword","search","checkRePassword","validateEmail","validateVerifyCode","isInteger","rules","validator","required","trigger","min","max","getVerifyCode","timerI","setInterval","timerT","setTimeout","clearTimeout","clearInterval","clickRegister","forgetUsername","forgetEmail","forgetVerifyCode","forgetVerifyCode2","newPassword","sendVerifyCode","resetPassword","carouselItems","id","title","image","require","description","tags","selectedItem","carousel","handleCommand","command","removeItem","goToLogin","handleClickItem","label","setActiveItem","carouselChange","cur","fetchTask","taskID","taskid","simpleImageLabel","subtask","content","SimpleImageLabel","el","imageUrl","labels","answer","readOnly","watch","setImage","setLabels","currentSubTaskType","currentQuestionType","subTasksDrawerVisible","subTasks","currentTask","Object","fetchSubTasks","showSubTasksDrawer","reportSubtask","subTask","subtask_index","subtask_status","confirmEndTask","confirmEnd","window","endTask","dialogImageVisible","currenSubTask","viewImageAnswer","downloadData","columns","csvContent","join","map","subtask_id","row","blob","Blob","url","URL","createObjectURL","link","createElement","href","setAttribute","body","appendChild","removeChild","receiver","currentLabel","labelsCount","emit","__emit","contextmenu","labelClick","saveLabels","annotationData","getLabels","removeAllLabels","removeLabel","uuid","removeLabelByUuid","updateLabelName","setLabelByUuid","updateLabelColor","color","annotationResult","updateAnswer","Message","submitAnnotation","cancelButtonText","location","reload","currentUserId","currentUserName","handleClaim","currentUser","updateTaskReceiver","canAnnotate","drawerVisible","currentSubTask","handleAnnotateDrawer","handleClose","done","dialogAnswerVisible","currentViewSubTask","viewResults","approvalStatus","rejectionReason","handleSubmit","handleReportSuccess","reportData","action","handleReportFailure","routes","component","UserLoginView","HomeView","PostTaskView","TaskMarketView","PersonInfoView","MyPostedTaskView","MyWorkView","TaskDetailView","AdminTaskView","AdminReportView","createRouter","history","createWebHistory","createStore","state","getters","mutations","actions","modules","createApp","App","use","store","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}